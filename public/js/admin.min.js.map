{"version":3,"sources":["../../node_modules/browser-pack/_prelude.js","../../node_modules/base64-js/index.js","../../node_modules/buffer/index.js","../../node_modules/ieee754/index.js","../../node_modules/isarray/index.js","../../node_modules/process/browser.js","../../node_modules/timers-browserify/main.js","src/app.js","src/blocks/controllers/BlocksAddCtrl.js","src/blocks/controllers/BlocksDetailsCtrl.js","src/blocks/controllers/BlocksEditCtrl.js","src/blocks/controllers/BlocksListCtrl.js","src/blocks/controllers/directives/BlocksDeleteCtrl.js","src/blocks/directives/BlockDeleteButton.js","src/blocks/module.js","src/blocks/services/BlockService.js","src/blocks/services/BlocksRepository.js","src/content/controllers/ContentAddCtrl.js","src/content/controllers/ContentAddTranslationCtrl.js","src/content/controllers/ContentBlocksCtrl.js","src/content/controllers/ContentCategoryTreeCtrl.js","src/content/controllers/ContentDashboardCtrl.js","src/content/controllers/ContentDetailsCtrl.js","src/content/controllers/ContentDetailsEditCtrl.js","src/content/controllers/ContentHistoryCtrl.js","src/content/controllers/ContentListCtrl.js","src/content/controllers/ContentTrashcanCtrl.js","src/content/controllers/directives/ContentDeleteCtrl.js","src/content/controllers/directives/ContentPublishedAtEditCtrl.js","src/content/controllers/directives/ContentRestoreCtrl.js","src/content/controllers/directives/ContentRouteCtrl.js","src/content/controllers/directives/ContentThemeEditCtrl.js","src/content/controllers/directives/ContentThumbCtrl.js","src/content/controllers/directives/ContentTogglePropertyCtrl.js","src/content/controllers/directives/ContentWeightEditCtrl.js","src/content/controllers/directives/SetTranslationAsActiveCtrl.js","src/content/controllers/directives/TranslationDeleteCtrl.js","src/content/directives/CharactersCounter.js","src/content/directives/ContentActionsDropdown.js","src/content/directives/ContentDeleteButton.js","src/content/directives/ContentEditRouteButton.js","src/content/directives/ContentPublishedAtEditButton.js","src/content/directives/ContentRestoreButton.js","src/content/directives/ContentThemeEditButton.js","src/content/directives/ContentThumbButton.js","src/content/directives/ContentTogglePropertyButton.js","src/content/directives/ContentWeightEditButton.js","src/content/directives/SetTranslationAsActiveButton.js","src/content/directives/TranslationDeleteButton.js","src/content/module.js","src/content/services/ContentRepository.js","src/core/controllers/CoreCtrl.js","src/core/controllers/EntityFilesCtrl.js","src/core/controllers/directives/AddFilesButtonCtrl.js","src/core/directives/AddFilesButton.js","src/core/directives/StatesDropdown.js","src/core/filters/CoreFilters.js","src/core/module.js","src/core/services/LangRepository.js","src/core/services/NavBar.js","src/core/services/TopNavBar.js","src/core/services/Translations.js","src/core/services/Utils.js","src/files/controllers/FilesAddCtrl.js","src/files/controllers/FilesAddTranslationCtrl.js","src/files/controllers/FilesDetailsCtrl.js","src/files/controllers/FilesDetailsEditCtrl.js","src/files/controllers/FilesListCtrl.js","src/files/controllers/directives/FilesDeleteCtrl.js","src/files/controllers/directives/FilesDeleteTranslationCtrl.js","src/files/controllers/directives/FilesTogglePropertyCtrl.js","src/files/directives/FileDeleteButton.js","src/files/directives/FileTogglePropertyButton.js","src/files/directives/FileTranslationDeleteButton.js","src/files/module.js","src/files/services/FileService.js","src/files/services/FilesRepository.js","src/lib/Notifications.js","src/lib/Storage.js","src/lib/ckOptions.js","src/lib/navigation.js","src/settings/controllers/SettingsCtrl.js","src/settings/controllers/directives/SettingCopyCtrl.js","src/settings/directives/SettingCopyButton.js","src/settings/module.js","src/settings/services/SettingsRepository.js","src/user/controllers/UserDetailsCtrl.js","src/user/controllers/UserEditCtrl.js","src/user/controllers/UserListCtrl.js","src/user/controllers/directives/UserDeleteCtrl.js","src/user/directives/UserActionsDropdown.js","src/user/directives/UserDeleteButton.js","src/user/module.js","src/user/services/UserRepository.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","getLens","b64","len","validLen","indexOf","placeHoldersLen","byteLength","lens","_byteLength","toByteArray","tmp","arr","Arr","curByte","revLookup","charCodeAt","tripletToBase64","num","lookup","encodeChunk","uint8","start","end","output","push","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","Uint8Array","Array","typedArraySupport","__proto__","prototype","foo","subarray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","this","allocUnsafe","from","value","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","actual","write","slice","fromArrayLike","array","byteOffset","obj","isBuffer","copy","buffer","isnan","type","isArray","data","toString","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","m","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","lastIndexOf","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","byteArray","hi","lo","src","dst","INSPECT_MAX_BYTES","global","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","log","LN2","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","noop","process","nextTick","args","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","umask","Timeout","id","clearFn","_id","_clearFn","Function","immediateIds","nextImmediateId","window","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","fn","clearImmediate","dependencies","modules","angular","config","$stateProvider","$urlRouterProvider","RestangularProvider","$translateProvider","$translatePartialLoaderProvider","httpMethodInterceptorProvider","viewPath","otherwise","whitelistDomain","Config","domain","state","url","templateUrl","useLoader","urlTemplate","addPart","preferredLanguage","fallbackLangCode","useSanitizeValueStrategy","setBaseUrl","apiUrl","setDefaultHttpFields","cache","withCredentials","setDefaultHeaders","X-Requested-With","Accept","X-CSRF-TOKEN","Laravel","csrfToken","setRestangularFields","route","addResponseInterceptor","operation","extractedData","meta","params","NavBar","$rootScope","Restangular","Utils","addFirst","action","icon","baseUrl","setErrorInterceptor","response","deferred","responseHandler","status","_","forEach","error","errors","fieldErrors","Notifications","addError","location","href","message","BlocksAddCtrl","$scope","langCode","BlocksRepository","BlockService","ckOptions","isEdited","newBlock","isActive","weight","language_code","blockTypes","blockRegions","region","save","prepareRequestData","create","then","addSuccess","$state","go","reload","$inject","BlocksDetailsCtrl","block","tabs","default","blockId","clean","BlocksEditCtrl","translations","find","$watchCollection","newValue","oldValue","isTranslationChanged","update","$stateParams","createTranslation","redirectBack","BlocksListCtrl","NgTableParams","tableParams","count","sorting","total","getData","$defer","requestPending","queryOptions","perPage","page","transLang","orderBy","sort","substring","promise","resolve","BlocksDeleteCtrl","$modal","vm","deleteModal","initModal","self","modal","scope","content","show","placement","hotkeys","add","combo","description","$filter","forceDelete","callback","deleteContent","showModal","del","closeModal","hide","deleteBlock","delete","$current","inherit","current","BlockDeleteButton","restrict","controller","controllerAs","bindToController","link","element","attrs","force","abstract","views","startsWith","one","langSwitcher@blocks.show","blockSettings@blocks.show","deepStateRedirect","sticky","contentTab","entity","service","factory","directive","filter","custom_fields","body","api","blocks","all","get","getList","listForContent","elem","stripRestangular","newContent","post","remove","categoryKey","patch","newTranslation","ContentAddCtrl","listParent","ContentRepository","parentId","contentType","is_active","contentSaveButtonLinks","text","click","addNewContent","redirect","parent_id","published_at","Date","toISOString","map","routes","contentId","ContentAddTranslationCtrl","$translate","isLoaded","newContentTranslation","content_id","parent","addInfo","instant","toUpperCase","addNewContentTranslation","ContentBlocksCtrl","groupBy","first","showBody","showRegion","ContentCategoryTreeCtrl","categories","openCategories","getRootIdFromPath","path","getNodeById","collection","category","activeNode","union","root","Storage","setStorageItem","uncategorized","removeStorageItem","toggleNode","toggle","nodeId","$element","collapsed","without","ContentDashboardCtrl","ContentDetailsCtrl","author","takeRight","contentParent","saveContent","updateContent","ContentDetailsEditCtrl","activeTranslation","getTranslationByLang","saveTranslation","ContentHistoryCtrl","created_at","ContentListCtrl","contentAddButtonLinks","contentListActions","filters","omit","merge","activeFilter","isUndefined","only_published","only_not_published","level","children","ContentTrashcanCtrl","deleted","ContentDeleteCtrl","ContentPublishedAtEditCtrl","editModal","contentPublishedAt","saveContentPublishedAt","dateTime","moment","utc","format","ContentRestoreCtrl","restoreModal","restoreContent","editAfterRestore","currentLang","ContentRouteCtrl","editRouteModal","contentRoute","oldRoute","saveContentRoute","newRoute","updateContentRoute","ContentThemeEditCtrl","contentTheme","saveContentWeight","theme","ContentThumbCtrl","FilesRepository","searchQuery","thumbId","getFiles","searchFiles","fileName","q","loadFiles","selectFile","file","files","thumb_id","ContentTogglePropertyCtrl","toggleProperty","propertyName","currentValue","ContentWeightEditCtrl","contentWeight","SetTranslationAsActiveCtrl","setAsActiveModal","getTranslationById","translation","shift","translationId","selectedTranslation","setAsActive","DeleteTranslationCtrl","deleteTranslation","CharactersCounter","characters","ContentActionsDropdown","$dropdown","contentActionsDropdown","record","lang","dropdown","animation","mapValues","ContentDeleteButton","ContentEditRouteButton","ContentPublishedAtEditButton","ContentRestoreButton","ContentThemeEditButton","ContentThumbButton","ContentTogglePropertyButton","ContentWeightEditButton","SetTranslationAsActiveButton","TranslationDeleteButton","TranslationDeleteCtrl","tree","only_categories","contentListParent","getStorageItem","quickSidebarLeft","UserRepository","author_id","langSwitcher@content.show","contentSettings@content.show","showMask","langSwitcher@content.edit","contentSettings@content.edit","contents","CoreCtrl","Translations","TopNavBar","getTranslations","langs","defaultLang","is_default","getDefaultLang","setFallbackLang","setLang","setEditorOption","language","selectLanguage","refreshCurrentState","defaultStateName","navBar","getItems","topNavBar","multilang","isMultiLangEnabled","getEntitiesTypes","key","currentUserId","showSidebar","showTransLangSwitcher","showAdminLangSwitcher","$on","event","toState","editStateName","stateIncludes","hasOwnProperty","checkIfLanguageIsAvailable","EntityFilesCtrl","$timeout","blockers","isDirty","apiProcessing","initializing","fileTypes","entityId","listForEntity","syncFiles","syncWithEntity","flatMap","detachFile","fileId","reject","each","index","AddFilesButtonCtrl","$q","filesModal","existingFiles","filesToAdd","defer","filesType","isSelected","findIndex","addFiles","availableFiles","rejectExistingFiles","filesIds","AddFilesButton","ContentAddFilesCtrl","StatesDropdown","statesDropdown","uppercase","field","currentTranslation","has","values","$sce","trustAsHtml","dateSTR","parse","activeRoute","isAfter","user","fullName","first_name","last_name","addLastChild","LangRepository","languages","fallbackLanguage","use","available","v","k","$previousState","previousState","stateNames","stateName","contentTypes","isContentActive","FilesAddCtrl","Upload","FileService","progress","isBusy","newFileDefaults","defaultLangCode","removeFile","splice","invalidFiles","setDefaults","ngfMaxTotalSize","uploadMaxTotalSize","ngfKeep","ngfMaxFiles","uploadMaxFiles","ngfValidate","pattern","getTypeExtensionsPattern","ngfModelInvalid","promises","defaults","cloneDeep","evt","loaded","catch","FilesAddTranslationCtrl","newFileTranslation","addFileTranslation","FilesDetailsCtrl","FilesDetailsEditCtrl","saveFile","FilesListCtrl","fileAddButtonLinks","FilesDeleteCtrl","deleteFile","FileId","FilesDeleteTranslationCtrl","FilesTogglePropertyCtrl","FileDeleteButton","FileTogglePropertyButton","FileTranslationDeleteButton","langSwitcher@files.show","fileSettings@files.show","fileTab","langSwitcher@files.edit","fileSettings@files.edit","fileExtensions","getEntityEndpoint","customPUT","newFile","upload","clone","configuration","headers","defaultHeaders","defaultHttpFields","stackBottomRight","dir1","dir2","firstpos1","firstpos2","options","addclass","stack","shadow","buttons","sticker","addMessages","messages","addInfos","addErrors","addWarnings","addWarning","addSuccesses","translationParams","PNotify","storageItems","object","objectValue","sourceValue","toolbarGroups","groups","height","getEditorOptions","custom","Navigation","items","checkStructure","divider","getChildren","foundFlag","addBeforeAfter","position","addChild","unshift","addBeforeAfterChild","addBefore","addAfter","newItem","addFirstChild","addBeforeChild","addAfterChild","exportToDropdownMenu","results","forIn","SettingsCtrl","SettingsRepository","settings","numericFields","SettingCopyCtrl","copyModal","saveSetting","optionKey","fromJson","optionValue","optionNewValue","SettingCopyButton","option","UserDetailsCtrl","userId","saveUser","UserListCtrl","userListActions","deleteUser","UserActionsDropdown","userActionsDropdown","UserDeleteCtrl","UserDeleteButton","UserDeleteController","users"],"mappings":"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","file":"admin.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};","'use strict';\n\nrequire('./core/module.js');\nrequire('./content/module.js');\nrequire('./blocks/module.js');\nrequire('./user/module.js');\nrequire('./files/module.js');\nrequire('./settings/module.js');\n\nvar dependencies = [\n    'restangular',\n    'ui.router',\n    'ui.router.default',\n    'ct.ui.router.extras',\n    'ngAnimate',\n    'mgcrea.ngStrap',\n    'pascalprecht.translate',\n    'ckeditor',\n    'angular-loading-bar',\n    'ng.httpLoader',\n    'cfp.hotkeys',\n    'admin.core',\n    'admin.content',\n    'admin.blocks',\n    'admin.files',\n    'admin.user',\n    'admin.settings',\n    'ngFileUpload',\n    'ngMessages'\n];\ndependencies.push.apply(dependencies, modules); // Other modules are loaded by twig\n\nangular.module('admin', dependencies).config([\n    '$stateProvider',\n    '$urlRouterProvider',\n    'RestangularProvider',\n    '$translateProvider',\n    '$translatePartialLoaderProvider',\n    'httpMethodInterceptorProvider',\n    function($stateProvider, $urlRouterProvider, RestangularProvider, $translateProvider, $translatePartialLoaderProvider, httpMethodInterceptorProvider) {\n        var viewPath = 'gzero/admin/views/';\n\n        // For any unmatched url, redirect to /state1\n        $urlRouterProvider.otherwise('/');\n        // Whitelist the domains that the loader wil show for\n        httpMethodInterceptorProvider.whitelistDomain(Config.domain);\n        // Now set up the states\n        $stateProvider\n            .state('home', {\n                url: '/',\n                templateUrl: viewPath + 'home.html'\n            });\n\n        $translateProvider.useLoader('$translatePartialLoader', {\n            urlTemplate: 'gzero/{part}/lang/{lang}.json'\n        });\n        $translatePartialLoaderProvider.addPart('admin');\n        $translateProvider.preferredLanguage(Config.fallbackLangCode);\n\n        // User more secure variant sanitize strategy for escaping;\n        $translateProvider.useSanitizeValueStrategy('escape');\n\n        RestangularProvider.setBaseUrl(Config.apiUrl + '/v1');\n\n        RestangularProvider.setDefaultHttpFields({\n            cache: false,\n            withCredentials: true\n        });\n\n        // Set default request headers\n        RestangularProvider.setDefaultHeaders({\n            'X-Requested-With': 'XMLHttpRequest',\n            'Accept': 'application/json',\n            'X-CSRF-TOKEN': Laravel.csrfToken\n        });\n\n        // Rename Restangular route field to use a $ prefix for easy distinction between data and metadata\n        RestangularProvider.setRestangularFields({route: '$route'});\n        // Add a response interceptor\n        RestangularProvider.addResponseInterceptor(function(data, operation) {\n            var extractedData;\n            // .. to look for getList operations\n\n            if (operation === 'getList') {\n                // .. and handle the data and meta data\n                if (typeof data.data !== 'undefined') {\n                    extractedData = data.data;\n                    extractedData.meta = data.meta;\n                    extractedData.params = data.params;\n                } else { // only one item in collection\n                    extractedData = [data];\n                }\n            } else {\n                extractedData = data;\n            }\n\n            return extractedData;\n        });\n    }\n]).run([\n    'NavBar',\n    '$rootScope',\n    'Restangular',\n    'Utils',\n    function(NavBar, $rootScope, Restangular, Utils) {\n        NavBar.addFirst({title: 'DASHBOARD', action: 'home', icon: 'fa fa-home'});\n        $rootScope.baseUrl = Utils.Config.url;\n\n        Restangular.setErrorInterceptor(function(response, deferred, responseHandler) {\n            switch (response.status) {\n                case 422:\n                    _.forEach(response.data.error.errors, function(fieldErrors) {\n                        _.forEach(fieldErrors, function(error) {\n                            Utils.Notifications.addError(error);\n                        });\n                    });\n                    break;\n                case 404:\n                    Utils.Notifications.addError('COMMON_ERROR');\n                    break;\n                case 403:\n                    window.location.href = Config.url;\n                    break;\n                default:\n                    Utils.Notifications.addError(response.data.message);\n            }\n            return false;\n        });\n    }\n]);\n","'use strict';\n\nfunction BlocksAddCtrl($scope, Utils, langCode, BlocksRepository, BlockService) {\n    $scope.ckOptions = Utils.ckOptions;\n    $scope.isEdited = false;\n    // default values\n    $scope.newBlock = {\n        isActive: true,\n        weight: 0,\n        language_code: langCode\n    };\n\n    // if block types are set\n    if (typeof $scope.blockTypes !== 'undefined') {\n        $scope.newBlock.type = $scope.blockTypes[0];\n    }\n\n    // if block regions are set\n    if (typeof $scope.blockRegions !== 'undefined') {\n        $scope.newBlock.region = $scope.blockRegions[0];\n    }\n\n    // block POST action\n    $scope.save = function(newBlock) {\n        newBlock = BlockService.prepareRequestData(newBlock);\n        BlocksRepository.create(newBlock).then(function(response) {\n            Utils.Notifications.addSuccess('BLOCK_CREATED');\n            Utils.$state.go('blocks.list', {}, {reload: true});\n        }, function(response) {\n            Utils.Notifications.addError(response.data.message);\n        });\n    };\n}\n\nBlocksAddCtrl.$inject = ['$scope', 'Utils', 'langCode', 'BlocksRepository', 'BlockService'];\nmodule.exports = BlocksAddCtrl;\n","'use strict';\n\nfunction BlocksDetailsCtrl($scope, block, langCode, BlocksRepository, Utils) {\n\n    $scope.Config = Utils.Config;\n\n    // TODO: get registered tabs\n    $scope.tabs = [\n        {\n            title: 'CONTENT',\n            action: 'details',\n            default: true // default active tab in settings edit mode\n        },\n        {\n            title: 'FILE_TYPES.IMAGE',\n            action: 'files',\n            params: { blockId: block.id, langCode: langCode, type: 'image' }\n        },\n        {\n            title: 'FILE_TYPES.DOCUMENT',\n            action: 'files',\n            params: { blockId: block.id, langCode: langCode, type: 'document' }\n        }\n    ];\n\n    // if lang code exists\n    if (typeof langCode !== 'undefined') {\n        $scope.langCode = langCode;\n    }\n\n    // if block exists\n    if (typeof block !== 'undefined') {\n        $scope.block = BlocksRepository.clean(block);\n    }\n\n}\nBlocksDetailsCtrl.$inject = ['$scope', 'block', 'langCode', 'BlocksRepository', 'Utils'];\nmodule.exports = BlocksDetailsCtrl;\n","'use strict';\n\nfunction BlocksEditCtrl($scope, Utils, langCode, block, BlocksRepository, BlockService) {\n    $scope.ckOptions = Utils.ckOptions;\n    $scope.isEdited = true;\n    // if block types are set\n    if (typeof block !== 'undefined') {\n        $scope.newBlock = BlocksRepository.clean(block);\n        // set active translation\n        if (typeof $scope.newBlock.translations !== 'undefined') {\n            $scope.newBlock.translations = _.find($scope.newBlock.translations, {'language_code': langCode});\n            // if not found, set as new\n            if (typeof $scope.newBlock.translations === 'undefined') {\n                $scope.newBlock.translations = {'language_code': langCode};\n            }\n        }\n    }\n\n    // check for translations update @TODO use translations history\n    $scope.$watchCollection('newBlock.translations', function(newValue, oldValue) {\n        if (newValue !== oldValue) {\n            $scope.isTranslationChanged = true;\n        }\n    });\n\n    // block PUT action\n    $scope.save = function(newBlock) {\n        newBlock = BlockService.prepareRequestData(newBlock);\n        // update block\n        BlocksRepository.update(Utils.$stateParams.blockId, newBlock).then(function(response) {\n            // add new translation @TODO use translations history\n            if ($scope.isTranslationChanged) {\n                BlocksRepository.createTranslation(Utils.$stateParams.blockId, newBlock.translations).then(function(response) {\n                    Utils.Notifications.addSuccess('THE_CHANGES_HAVE_BEEN_SAVED');\n                    Utils.redirectBack('blocks.list');\n                }, function(response) {\n                    Utils.Notifications.addError(response.data.message);\n                });\n            } else {\n                Utils.Notifications.addSuccess('THE_CHANGES_HAVE_BEEN_SAVED');\n                Utils.redirectBack('blocks.list');\n            }\n\n        }, function(response) {\n            Utils.Notifications.addError(response.data.message);\n        });\n    };\n}\n\nBlocksEditCtrl.$inject = ['$scope', 'Utils', 'langCode', 'block', 'BlocksRepository', 'BlockService'];\nmodule.exports = BlocksEditCtrl;\n","'use strict';\n\nfunction BlocksListCtrl($scope, Utils, NgTableParams, BlocksRepository) {\n    $scope.tableParams = new NgTableParams({\n        count: 25, // count per page\n        sorting: {\n            'region': 'desc', // initial sorting\n            'weight': 'asc'\n        }\n    }, {\n        total: 0, // length of data\n        getData: function($defer, params) {\n            $scope.requestPending = true;\n            // prepare options to be sent to api\n            var queryOptions = {};\n\n            // params.count() - number of items per page declared in view\n            if (typeof Utils.$stateParams.perPage !== 'undefined') {\n                params.count(Utils.$stateParams.perPage);\n                queryOptions.perPage = params.count();\n            }\n\n            // params.page() - current page\n            if (typeof Utils.$stateParams.page !== 'undefined') {\n                params.page(Utils.$stateParams.page);\n                queryOptions.page = params.page();\n            }\n\n            // tableParams.orderBy() - an array of string indicating both the sorting column and direction (e.g. [\"+name\", \"-email\"])\n            if (params.sorting() && typeof $scope.transLang !== 'undefined') {\n                // only interested in first sort column for now\n                var orderBy = params.orderBy()[0];\n                queryOptions.sort = orderBy[0] === '+' ? orderBy.substring(1) : orderBy;\n            }\n\n            // get list by default\n            var promise = BlocksRepository.list(queryOptions);\n\n            // Promise is a REST AngularJS service that talks to api and return promise\n            promise.then(function(response) {\n                $scope.requestPending = false;\n                params.total(response.meta.total);\n                $defer.resolve(BlocksRepository.clean(response));\n                $scope.meta = response.meta;\n            });\n        }\n    });\n}\n\nBlocksListCtrl.$inject = ['$scope', 'Utils', 'NgTableParams', 'BlocksRepository'];\nmodule.exports = BlocksListCtrl;\n","'use strict';\n\nfunction BlocksDeleteCtrl($scope, Utils, BlocksRepository, $modal) {\n    var vm = this;\n    var viewPath = 'gzero/admin/views/blocks/directives/';\n    // Delete modal\n    vm.deleteModal = {\n        /**\n         * Function initiates the AngularStrap modal\n         *\n         * @param title translatable title of modal\n         * @param message translatable messages of modal\n         */\n        initModal: function(title, message) {\n            var self = this;\n            self.modal = $modal({\n                scope: $scope,\n                title: title,\n                content: message,\n                templateUrl: viewPath + 'blockDeleteModal.tpl.html',\n                show: true,\n                placement: 'center'\n            });\n\n            // Bind hotkeys\n            Utils.hotkeys.add({\n                combo: 'enter',\n                description: Utils.$filter('translate')(\n                    vm.forceDelete ? 'CONFIRM_DELETE' : 'CONFIRM_MOVE_TO_TRASH'\n                ),\n                callback: function() {\n                    self.deleteContent();\n                }\n            });\n        },\n\n        /**\n         * Function shows the AngularStrap modal\n         *\n         * @param blockId block id to be removed, it is saved in the scope\n         * @param forceDelete use forceDelete\n         */\n        showModal: function(blockId, forceDelete) {\n            var self = this;\n            vm.blockId = blockId;\n            vm.forceDelete = forceDelete;\n            if (vm.forceDelete === true) {\n                self.initModal('PLEASE_CONFIRM', 'DELETE_BLOCK_QUESTION');\n            } else {\n                self.initModal('PLEASE_CONFIRM', 'MOVE_BLOCK_TO_TRASH_QUESTION');\n            }\n            Utils.hotkeys.del('enter');\n        },\n\n        /**\n         * Function close the modal\n         *\n         */\n        closeModal: function() {\n            var self = this;\n            self.modal.hide();\n        },\n\n        /**\n         * Function performs the RestAngular DELETE action for block id in scope\n         *\n         */\n        deleteBlock: function() {\n            var self = this;\n            // Soft and force delete block @TODO handle soft delete\n            BlocksRepository.delete(vm.blockId).then(function(response) {\n                BlocksRepository.forceDelete(vm.blockId).then(function(response) {\n                    self.closeModal();\n                    if (Utils.$state.$current.name === 'blocks.show.details') {\n                        Utils.$state.go('blocks.list', {}, {reload: true, inherit: false});\n                    } else {\n                        Utils.$state.go(Utils.$state.current, {}, {reload: true});\n                    }\n                    Utils.Notifications.addSuccess(\n                        vm.forceDelete ? 'BLOCK_HAS_BEEN_DELETED' : 'BLOCK_HAS_BEEN_MOVED_TO_TRASH'\n                    );\n                });\n            });\n        }\n    };\n}\n\nBlocksDeleteCtrl.$inject = ['$scope', 'Utils', 'BlocksRepository', '$modal'];\nmodule.exports = BlocksDeleteCtrl;\n","'use strict';\n\nfunction BlockDeleteButton() {\n    return {\n        scope: true,\n        restrict: 'A',\n        controller: 'BlocksDeleteCtrl',\n        controllerAs: 'vm',\n        bindToController: true,// because the scope is isolated\n        link: function(scope, element, attrs, BlocksDeleteCtrl) {\n            element.on('click', function() {\n                // Show a delete modal from a controller\n                BlocksDeleteCtrl.deleteModal.showModal(attrs.blockId, attrs.force === 'true');\n            });\n        }\n    };\n}\n\nBlockDeleteButton.$inject = [];\nmodule.exports = BlockDeleteButton;\n","'use strict';\n\nangular.module('admin.blocks', [])\n    .config([\n        '$stateProvider',\n        '$urlRouterProvider',\n        'RestangularProvider',\n        function($stateProvider, $urlRouterProvider, RestangularProvider) {\n\n            var viewPath = 'gzero/admin/views/blocks/';\n\n            // Now set up the states\n            $stateProvider\n                .state('blocks', {\n                    url: '/blocks',\n                    templateUrl: viewPath + 'index.html',\n                    abstract: true\n                })\n                // BLOCK LIST\n                .state('blocks.list', {\n                    url: '/list?page&perPage',\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'list.html',\n                            controller: 'BlocksListCtrl'\n                        }\n                    }\n\n                })\n                // BLOCK SHOW\n                .state('blocks.show', {\n                    url: '/{blockId}/show/{langCode}',\n                    abstract: [\n                        // redirect to active tab on language change\n                        '$state', function($state) {\n                            return _.startsWith($state.current.name, 'blocks.show') ? $state.current.name : '.details';\n                        }\n                    ],\n                    resolve: {\n                        langCode: [\n                            '$state', '$stateParams', function($state, $stateParams) {\n                                return $stateParams.langCode;\n                            }\n                        ],\n                        block: [\n                            '$stateParams', 'BlocksRepository', function($stateParams, BlocksRepository) {\n                                return BlocksRepository.one($stateParams.blockId);\n                            }\n                        ]\n                    },\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'show.html',\n                            controller: 'BlocksDetailsCtrl'\n                        },\n                        'langSwitcher@blocks.show': {\n                            templateUrl: viewPath + 'details/langSwitcher.html'\n\n                        },\n                        'blockSettings@blocks.show': {\n                            templateUrl: viewPath + 'details/settings.html'\n\n                        }\n                    }\n                })\n                .state('blocks.show.details', {\n                    url: '/details',\n                    deepStateRedirect: true,\n                    sticky: true,\n                    views: {\n                        'contentTab': {\n                            templateUrl: viewPath + 'details/tabs/details.html'\n                        }\n                    }\n                })\n                .state('blocks.show.files', {\n                    url: '/files/{type}',\n                    deepStateRedirect: true,\n                    sticky: true,\n                    resolve:{\n                        entity: function(block){\n                            return block;\n                        }\n                    },\n                    views: {\n                        'contentTab': {\n                            templateUrl: 'gzero/admin/views/core/details/tabs/files.html',\n                            controller: 'EntityFilesCtrl'\n                        }\n                    }\n                })\n                // BLOCK ADD\n                .state('blocks.add', {\n                    url: '/add/{langCode}',\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'form.html',\n                            controller: 'BlocksAddCtrl'\n                        }\n                    },\n                    resolve: {\n                        langCode: [\n                            '$state', '$stateParams', function($state, $stateParams) {\n                                return $stateParams.langCode;\n                            }\n                        ]\n                    }\n                })\n                // BLOCK EDIT\n                .state('blocks.edit', {\n                    url: '/{blockId}/edit/{langCode}',\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'form.html',\n                            controller: 'BlocksEditCtrl'\n                        }\n                    },\n                    resolve: {\n                        langCode: [\n                            '$state', '$stateParams', function($state, $stateParams) {\n                                return $stateParams.langCode;\n                            }\n                        ],\n                        block: [\n                            '$stateParams', 'BlocksRepository', function($stateParams, BlocksRepository) {\n                                return BlocksRepository.one($stateParams.blockId);\n                            }\n                        ]\n                    }\n                });\n        }\n    ])\n    .controller('BlocksDetailsCtrl', require('./controllers/BlocksDetailsCtrl'))\n    .controller('BlocksListCtrl', require('./controllers/BlocksListCtrl'))\n    .controller('BlocksAddCtrl', require('./controllers/BlocksAddCtrl'))\n    .controller('BlocksEditCtrl', require('./controllers/BlocksEditCtrl'))\n    .controller('BlocksDeleteCtrl', require('./controllers/directives/BlocksDeleteCtrl'))\n    .service('BlockService', require('./services/BlockService.js'))\n    .factory('BlocksRepository', require('./services/BlocksRepository.js'))\n    .directive('blockDeleteButton', require('./directives/BlockDeleteButton.js'))\n    .run([\n        'NavBar',\n        function(NavBar) {\n            NavBar.add({\n                title: 'BLOCKS', action: 'blocks.list', icon: 'fa fa-th-large'\n            });\n        }\n    ]);\n","'use strict';\n\nfunction BlockService() {\n    return {\n        prepareRequestData: function(block) {\n            // handle block filter\n            if (block.filter !== null && typeof block.filter !== 'undefined') {\n                // set empty filter values if not exists\n                if (!('+' in block.filter)) {\n                    block.filter['+'] = [];\n                }\n                if (!('-' in block.filter)) {\n                    block.filter['-'] = [];\n                }\n                // handle empty block filter\n                if (block.filter['+'].length === 0 && block.filter['-'].length === 0) {\n                    block.filter = null;\n                }\n            }\n            // handle block translation custom fields\n            if (block.translations !== null && typeof block.translations !== 'undefined') {\n                if (block.translations.custom_fields === null) {\n                    block.translations.custom_fields = [];\n                }\n\n                block.title = block.translations.title;\n                block.body = block.translations.body;\n                block.custom_fields = block.translations.custom_fields;\n            }\n            return block;\n        }\n    };\n}\n\nBlockService.$inject = [];\nmodule.exports = BlockService;\n","'use strict';\n\nfunction BlocksRepository(Restangular) {\n    var api = 'blocks';\n    var blocks = Restangular.all(api);\n    return {\n        one: function(id, params) {\n            return Restangular.one(api, id).get(params);\n        },\n        list: function(params) {\n            return blocks.getList(params);\n        },\n        listForContent: function(id) {\n            return Restangular.one(api + '/content', id).getList();\n        },\n        clean: function(elem) {\n            return Restangular.stripRestangular(elem);\n        },\n        create: function(newContent) {\n            return blocks.post(newContent);\n        },\n        delete: function(id) {\n            return Restangular.one(api, id).remove();\n        },\n        forceDelete: function(id) {\n            return Restangular.one('deleted-blocks', id).remove();\n        },\n        update: function(categoryKey, data) {\n            return Restangular.one(api, categoryKey).patch(data);\n        },\n        createTranslation: function(id, newTranslation) {\n            return Restangular.one(api, id).all('translations').post(newTranslation);\n        }\n    };\n}\n\nBlocksRepository.$inject = ['Restangular'];\nmodule.exports = BlocksRepository;\n","'use strict';\n\nfunction ContentAddCtrl($scope, Utils, listParent, ContentRepository) {\n    var parentId = null;\n    $scope.contentType = Utils.$stateParams.type;\n    $scope.ckOptions = Utils.ckOptions;\n\n    // if parent category exists\n    if (typeof listParent !== 'undefined') {\n        $scope.listParent = listParent; // selected category\n        parentId = listParent.id;\n    }\n    // default translations lang code\n    $scope.newContent = {\n        type: Utils.$stateParams.type,\n        is_active: true,\n        language_code: $scope.transLang.code\n    };\n\n    // Angular strap dropdown for save button\n    $scope.contentSaveButtonLinks = [\n        {\n            text: 'SAVE_AND_CONTINUE_EDITING',\n            click: 'addNewContent(newContent, \"content.edit.details\")'\n        },\n        {\n            text: 'SAVE_AND_ADD_ANOTHER',\n            click: 'addNewContent(newContent, \"content.add\")'\n        }\n    ];\n\n    // contents POST action\n    $scope.addNewContent = function addNewContent(newContent, redirect) {\n        newContent.parent_id = parentId; // set parent category as null\n        newContent.published_at = new Date().toISOString().slice(0, 19).replace('T', ' '); // set publish at date\n        // if parent category exists\n        if (typeof $scope.listParent !== 'undefined') {\n            // check for route translation in selected language\n            var route = _.map(_.filter($scope.listParent.routes, {language_code: newContent.language_code}), 'path');\n            if (!route.length) {\n                newContent.parent_id = null; // if not found set as uncategorized\n            }\n        }\n        ContentRepository.newContent(newContent).then(function(response) {\n            var message = Utils.$stateParams.type === 'category' ? 'CATEGORY_CREATED' : 'CONTENT_CREATED';\n            Utils.Notifications.addSuccess(message);\n            // when there is custom redirect\n            if (typeof redirect !== 'undefined') {\n                var params = (redirect === 'content.edit.details') ? {\n                    contentId: response.id,\n                    langCode: newContent.language_code\n                } : {type: Utils.$stateParams.type};\n\n                Utils.$state.go(redirect, params, {reload: true});\n            } else {\n                if (Utils.$stateParams.type === 'category') {\n                    // when create a category then set it as a new listParent on content list\n                    Utils.$state.go('content.list', {contentId: response.id}, {reload: true});\n                } else {\n                    // otherwise go to list without new listParent\n                    Utils.$state.go('content.list', {}, {reload: true});\n                }\n            }\n        });\n    };\n}\nContentAddCtrl.$inject = ['$scope', 'Utils', 'listParent', 'ContentRepository'];\nmodule.exports = ContentAddCtrl;\n","'use strict';\n\nfunction ContentAddTranslationCtrl($scope, $translate, Utils, content, ContentRepository) {\n    $scope.ckOptions = Utils.ckOptions;\n    $scope.isLoaded = true; // form visibility\n\n    // default translations lang code\n    $scope.newContentTranslation = {\n        content_id: Utils.$stateParams.contentId,\n        language_code: Utils.$stateParams.langCode\n    };\n\n    // if parent category exists\n    if (content.parent_id !== null) {\n        $scope.isLoaded = false; // hide form\n        // get parent category\n        ContentRepository.one(content.parent_id).then(function(response) {\n            var parent = ContentRepository.clean(response);\n            // check for route translation in selected language\n            var route = _.map(_.filter(parent.routes, {langCode: $scope.newContentTranslation.language_code}), 'path');\n            if (!route.length) {\n                // Redirect user to previous state or content list\n                Utils.redirectBack('content.list');\n                // \"Before adding translations to this content, you need to translate the categories in which it is located!\"\n                Utils.Notifications.addInfo('NO_PARENT_TRANSLATION_ERROR', { contentType: $translate.instant(content.type.toUpperCase()).toLowerCase() });\n            } else {\n                // parent url is translated, show form\n                $scope.isLoaded = true;\n            }\n        });\n    }\n\n    // contents POST action\n    $scope.addNewContentTranslation = function() {\n        ContentRepository.newContentTranslation(Utils.$stateParams.contentId, $scope.newContentTranslation).then(function(response) {\n            // Redirect user to previous state or content list\n            Utils.redirectBack('content.list');\n        });\n    };\n}\nContentAddTranslationCtrl.$inject = ['$scope', '$translate', 'Utils', 'content', 'ContentRepository'];\nmodule.exports = ContentAddTranslationCtrl;\n","'use strict';\n\nfunction ContentBlocksCtrl($scope, Utils, blocks, BlocksRepository) {\n    // if there are blocks available\n    if (typeof blocks !== 'undefined') {\n        $scope.blocks = _.groupBy(_.first(BlocksRepository.clean(blocks)), 'region');\n    }\n    // visibility settings\n    $scope.showBody = true; // show all blocks body by default\n    $scope.showRegion = true; // show all regions by default\n\n}\n\nContentBlocksCtrl.$inject = ['$scope', 'Utils', 'blocks', 'BlocksRepository'];\nmodule.exports = ContentBlocksCtrl;\n","'use strict';\n\nfunction ContentCategoryTreeCtrl($scope, categories, openCategories, listParent, Utils) {\n    /**\n     * Function returns root id from provided path\n     *\n     * @param path to search over\n     *\n     * @returns {int} root id\n     * @throws Error\n     */\n    function getRootIdFromPath(path) {\n        if (path.length > 0) {\n            return path[0];\n        } else {\n            throw new Error('Node path is too short!');\n        }\n    }\n\n    /**\n     * Function returns specified node form provided collection\n     *\n     * @param collection the collection to iterate over\n     * @param id  node id\n     *\n     * @returns {object} returns the found element, else undefined\n     */\n    function getNodeById(collection, id) {\n        return _.find(collection, function(category) {\n            return category.id === id;\n        });\n    }\n\n    // if there are open categories in the Utils.Storage\n    if (typeof openCategories !== 'undefined') {\n        $scope.openCategories = openCategories;\n    } else {\n        $scope.openCategories = [];\n    }\n\n    // if categories tree exists\n    if (typeof categories !== 'undefined') {\n        $scope.categories = categories;\n    }\n\n    // if parent category exists\n    if (typeof listParent !== 'undefined') {\n        $scope.activeNode = listParent.id;\n\n        // merge open categories with active category path\n        $scope.openCategories = _.union($scope.openCategories, listParent.path);\n        $scope.root = getNodeById($scope.categories, getRootIdFromPath(listParent.path));\n        // save open categories in the store\n        Utils.Storage.setStorageItem({openCategories: $scope.openCategories});\n    }\n\n    // removes listParent id from Utils.Storage\n    $scope.uncategorized = function() {\n        Utils.Storage.removeStorageItem('contentListParent');\n    };\n\n    // toggles Node in categories tree and manage Utils.Storage open categories object\n    $scope.toggleNode = function(scope) {\n        scope.toggle();\n        var nodeId = _.parseInt(scope.$element[0].id, 10);\n        // if node is open\n        if (!scope.collapsed) {\n            // add to scope\n            $scope.openCategories.push(nodeId);\n        } else {\n            // remove from scope\n            $scope.openCategories = _.without($scope.openCategories, nodeId);\n        }\n        // save in the store\n        Utils.Storage.setStorageItem({openCategories: $scope.openCategories});\n    };\n\n}\nContentCategoryTreeCtrl.$inject = ['$scope', 'categories', 'openCategories', 'listParent', 'Utils'];\nmodule.exports = ContentCategoryTreeCtrl;\n","'use strict';\n\nfunction ContentDashboardCtrl($scope) {\n\n}\nContentDashboardCtrl.$inject = ['$scope'];\nmodule.exports = ContentDashboardCtrl;\n","'use strict';\n\nfunction ContentDetailsCtrl($scope, content, langCode, author, ContentRepository, Utils) {\n\n    $scope.Config = Utils.Config;\n\n    // TODO: get registered tabs\n    $scope.tabs = [\n        {\n            title: 'CONTENT',\n            action: 'details',\n            default: true // default active tab in settings edit mode\n        },\n        {\n            title: 'HISTORY_OF_CHANGES',\n            action: 'history'\n        },\n        {\n            title: 'FILE_TYPES.IMAGE',\n            action: 'files',\n            params: { contentId: content.id, langCode: langCode, type: 'image' }\n        },\n        {\n            title: 'FILE_TYPES.DOCUMENT',\n            action: 'files',\n            params: { contentId: content.id, langCode: langCode, type: 'document' }\n        },\n        {\n            title: 'BLOCKS',\n            action: 'blocks'\n        }\n    ];\n\n    // if lang code exists\n    if (typeof langCode !== 'undefined') {\n        $scope.langCode = langCode;\n    }\n\n    if (typeof author !== 'undefined') {\n        $scope.author = author;\n    }\n\n    // if content exists\n    if (typeof content !== 'undefined') {\n        $scope.content = ContentRepository.clean(content);\n\n        // if content parent exists\n        if (content.path.length > 1) {\n            // the last but one id number from path\n            var parentId = _.takeRight(content.path, 2)[0];\n            ContentRepository.one(parentId).then(function(response) {\n                $scope.contentParent = ContentRepository.clean(response);\n            });\n        }\n    }\n\n    $scope.saveContent = function() {\n        ContentRepository\n            .updateContent($scope.content.id, $scope.content)\n            .then(function() {\n                Utils.Notifications.addSuccess('THE_CHANGES_HAVE_BEEN_SAVED');\n            });\n    };\n\n}\nContentDetailsCtrl.$inject = ['$scope', 'content', 'langCode','author', 'ContentRepository', 'Utils'];\nmodule.exports = ContentDetailsCtrl;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class ContentDetailsEditCtrl\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction ContentDetailsEditCtrl($scope, Utils, content, langCode, ContentRepository) { //jshint ignore:line\n\n    /**\n     * CKEditor settings getter\n     */\n    $scope.ckOptions = Utils.ckOptions;\n    \n    /**\n     * Currently active translation object\n     *\n     * @type Object\n     */\n    $scope.activeTranslation = Utils.getTranslationByLang((content.translations.slice(0)), langCode);\n\n    /**\n     * save current active translation as new active translation\n     * and go back to details show state\n     */\n    $scope.saveTranslation = function() {\n        ContentRepository.newContentTranslation(content.id, $scope.activeTranslation).then(function() {\n            Utils.$state.go('content.show.details', {\n                contentId: content.id,\n                langCode: langCode\n            });\n            Utils.Notifications.addSuccess('THE_CHANGES_HAVE_BEEN_SAVED');\n        });\n    };\n\n}\nContentDetailsEditCtrl.$inject = ['$scope', 'Utils', 'content', 'langCode', 'ContentRepository'];\nmodule.exports = ContentDetailsEditCtrl;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class ContentHistoryCtrl\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction ContentHistoryCtrl($scope, Utils, content, langCode, ContentRepository, NgTableParams) { //jshint ignore:line\n    $scope.tableParams = new NgTableParams({\n        count: 25, // count per page\n        sorting: {\n            'created_at': 'desc' // initial sorting\n        }\n    }, {\n        total: 0, // length of data\n        getData: function($defer, params) {\n            // prepare options to be sent to api\n            var queryOptions = {\n                language_code: langCode\n            };\n\n            // params.count() - number of items per page declared in view\n            if (typeof Utils.$stateParams.perPage !== 'undefined') {\n                params.count(Utils.$stateParams.perPage);\n                queryOptions.perPage = params.count();\n            }\n\n            // params.page() - current page\n            if (typeof Utils.$stateParams.page !== 'undefined') {\n                params.page(Utils.$stateParams.page);\n                queryOptions.page = params.page();\n            }\n\n            // tableParams.orderBy() - an array of string indicating both the sorting column and direction (e.g. [\"+name\", \"-email\"])\n            if (params.sorting()) {\n                // only interested in first sort column for now\n                var orderBy = params.orderBy()[0];\n                queryOptions.sort = orderBy[0] === '+' ? orderBy.substring(1) : orderBy;\n            }\n\n            // get list by default\n            var promise = ContentRepository.translations(content.id, queryOptions);\n\n            // Contents is a REST AngularJS service that talks to api and return promise\n            promise.then(function(response) {\n                params.total(response.meta.total);\n                $defer.resolve(ContentRepository.clean(response));\n                $scope.meta = response.meta;\n            });\n        }\n    });\n}\n\nContentHistoryCtrl.$inject = ['$scope', 'Utils', 'content', 'langCode', 'ContentRepository', 'ngTableParams'];\nmodule.exports = ContentHistoryCtrl;\n","'use strict';\n\nfunction ContentListCtrl($scope, Utils, listParent, ContentRepository, NgTableParams) {\n    // if parent category exists\n    if (typeof listParent !== 'undefined') {\n        $scope.listParent = listParent; // selected category\n    }\n\n    // TODO: content add button links\n    $scope.contentAddButtonLinks = [\n        {\n            text: 'ADD_CONTENT',\n            href: 'content.add({ type: \"content\" })',\n            icon: 'fa fa-file-text-o'\n\n        },\n        {\n            text: 'ADD_CATEGORY',\n            href: 'content.add({ type: \"category\" })',\n            icon: 'fa fa-folder-o'\n        }\n    ];\n\n    // TODO: content list actions\n    $scope.contentListActions = [\n        {\n            text: 'VIEW',\n            url: 'publicUrl', // this will be replaced with content public url\n            icon: 'fa fa-search'\n        },\n        {\n            text: 'EDIT',\n            href: 'content.show({ contentId: record_id, langCode: lang_code })',\n            icon: 'fa fa-pencil'\n        },\n        {\n            text: 'MOVE_TO_TRASH',\n            click: 'delete', // this will be replaced with delete action\n            icon: 'fa fa-times'\n        }\n    ];\n\n    // Bind hotkeys\n    Utils.hotkeys.add({\n        combo: 'ctrl+alt+n',\n        description: Utils.$filter('translate')('ADD_CONTENT'),\n        callback: function(){\n            Utils.$state.go('content.add', {type: 'content'});\n        }\n    });\n\n    Utils.hotkeys.add({\n        combo: 'ctrl+alt+m',\n        description: Utils.$filter('translate')('ADD_CATEGORY'),\n        callback: function(){\n            Utils.$state.go('content.add', {type: 'category'});\n        }\n    });\n\n    //  ngTable configuration\n    $scope.tableParams = new NgTableParams({\n        count: 25, // count per page\n        sorting: {\n            'created_at': 'desc' // initial sorting\n        }\n    }, {\n        total: 0, // length of data\n        getData: function($defer, params) {\n            $scope.requestPending = true;\n            // prepare options to be sent to api\n            var queryOptions = {\n                type: 'content'\n            };\n\n            // params.count() - number of items per page declared in view\n            if (typeof Utils.$stateParams.perPage !== 'undefined') {\n                params.count(Utils.$stateParams.perPage);\n                queryOptions.perPage = params.count();\n            }\n\n            // params.page() - current page\n            if (typeof Utils.$stateParams.page !== 'undefined') {\n                params.page(Utils.$stateParams.page);\n                queryOptions.page = params.page();\n            }\n\n            // tableParams.orderBy() - an array of string indicating both the sorting column and direction (e.g. [\"+name\", \"-email\"])\n            if (params.sorting()) {\n                // only interested in first sort column for now\n                var orderBy = params.orderBy()[0];\n                queryOptions.sort = orderBy[0] === '+' ? orderBy.substring(1) : orderBy;\n            }\n\n            // Utils.$stateParams - filters without contentId\n            var filters = _.omit(Utils.$stateParams, 'contentId');\n            queryOptions = _.merge(queryOptions, _.omit(filters, 'is_active'));\n            $scope.activeFilter = filters;\n\n            if (!_.isUndefined(filters.is_active)) {\n                if (filters.is_active === '1') {\n                    queryOptions.only_published = true;\n                } else {\n                    queryOptions.only_not_published = true;\n                }\n            }\n\n            // list promise\n            var promise = {};\n\n            // if parent category is not selected\n            if (typeof listParent === 'undefined') {\n                // get uncategorized\n                queryOptions.level = 0;\n                promise = ContentRepository.list(queryOptions);\n            } else {\n                // get children's\n                promise = ContentRepository.children(listParent.id, queryOptions);\n            }\n\n            // Promise is a REST AngularJS service that talks to api and return promise\n            promise.then(function(response) {\n                $scope.requestPending = false;\n                params.total(response.meta.total);\n                $defer.resolve(ContentRepository.clean(response));\n                $scope.meta = response.meta;\n            });\n        }\n    });\n}\nContentListCtrl.$inject = ['$scope', 'Utils', 'listParent', 'ContentRepository', 'ngTableParams'];\nmodule.exports = ContentListCtrl;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class UserController\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction ContentTrashcanCtrl($scope, ContentRepository, NgTableParams, Utils) {\n    $scope.tableParams = new NgTableParams({\n        count: 25, // count per page\n        sorting: {\n            'id': 'desc' // initial sorting\n        }\n    }, {\n        total: 0, // length of data\n        getData: function($defer, params) {\n            $scope.requestPending = true;\n            // prepare options to be sent to api\n            var queryOptions = {};\n\n            // params.count() - number of items per page declared in view\n            if (typeof Utils.$stateParams.perPage !== 'undefined') {\n                params.count(Utils.$stateParams.perPage);\n                queryOptions.perPage = params.count();\n            }\n\n            // params.page() - current page\n            if (typeof Utils.$stateParams.page !== 'undefined') {\n                params.page(Utils.$stateParams.page);\n                queryOptions.page = params.page();\n            }\n\n            // tableParams.orderBy() - an array of string indicating both the sorting column and direction (e.g. [\"+name\", \"-email\"])\n            if (params.sorting()) {\n                // only interested in first sort column for now\n                var orderBy = params.orderBy()[0];\n                queryOptions.sort = orderBy[0] === '+' ? orderBy.substring(1) : orderBy;\n            }\n\n            // Utils.$stateParams filters\n            queryOptions = _.merge(queryOptions, _.omit(Utils.$stateParams, 'is_active'));\n            $scope.activeFilter = Utils.$stateParams;\n\n            if (!_.isUndefined(Utils.$stateParams.is_active)) {\n                if (Utils.$stateParams.is_active === '1') {\n                    Utils.$stateParams.only_published = true;\n                } else {\n                    Utils.$stateParams.only_not_published = true;\n                }\n            }\n\n            // get list by default\n            var promise = ContentRepository.deleted(queryOptions);\n\n            // Contents is a REST AngularJS service that talks to api and return promise\n            promise.then(function(response) {\n                $scope.requestPending = false;\n                params.total(response.meta.total);\n                $defer.resolve(ContentRepository.clean(response));\n                $scope.meta = response.meta;\n            });\n        }\n    });\n}\n\nContentTrashcanCtrl.$inject = ['$scope', 'ContentRepository', 'ngTableParams', 'Utils'];\nmodule.exports = ContentTrashcanCtrl;\n","'use strict';\n\nfunction ContentDeleteCtrl($scope, Utils, $modal, ContentRepository) { // jshint ignore:line\n    var vm = this;\n    var viewPath = 'gzero/admin/views/content/directives/';\n    // Delete modal\n    vm.deleteModal = {\n        /**\n         * Function initiates the AngularStrap modal\n         *\n         * @param title translatable title of modal\n         * @param message translatable messages of modal\n         */\n        initModal: function(title, message) {\n            var self = this;\n            self.modal = $modal({\n                scope: $scope,\n                title: title,\n                content: message,\n                templateUrl: viewPath + 'contentDeleteModal.tpl.html',\n                show: true,\n                placement: 'center'\n            });\n        },\n        /**\n         * Function shows the AngularStrap modal\n         *\n         * @param contentId content id to be removed, it is saved in the scope\n         * @param contentType content type\n         * @param forceDelete use forceDelete\n         */\n        showModal: function(contentId, contentType, forceDelete) {\n            var self = this;\n            vm.contentId = contentId;\n            vm.contentType = contentType;\n            vm.forceDelete = forceDelete;\n            if (vm.forceDelete === true) {\n                self.initModal('PLEASE_CONFIRM', 'DELETE_CONTENT_QUESTION');\n            } else {\n                self.initModal('PLEASE_CONFIRM', 'MOVE_CONTENT_TO_TRASH_QUESTION');\n            }\n\n            // Bind hotkeys\n            Utils.hotkeys.add({\n                combo: 'enter',\n                description: Utils.$filter('translate')(\n                    vm.forceDelete ? 'CONFIRM_DELETE' : 'CONFIRM_MOVE_TO_TRASH'\n                ),\n                callback: function(){\n                    self.deleteContent();\n                }\n            });\n        },\n        /**\n         * Function close the modal\n         *\n         */\n        closeModal: function() {\n            var self = this;\n            Utils.hotkeys.del('enter');\n            self.modal.hide();\n        },\n        /**\n         * Function performs the RestAngular DELETE action for content id in scope\n         */\n        deleteContent: function() {\n            var self = this;\n\n            if (vm.forceDelete) {\n                ContentRepository.forceDelete(vm.contentId).then(function() {\n                    self.closeModal();\n                    // refresh current state\n                    if (vm.contentType === 'category') {\n                        // removed category\n                        Utils.Storage.removeStorageItem('contentListParent');\n                        Utils.Notifications.addSuccess('CATEGORY_HAS_BEEN_DELETED');\n                    } else {\n                        Utils.Notifications.addSuccess('CONTENT_HAS_BEEN_DELETED');\n                    }\n\n                    Utils.$state.go('content.trashcan', {contentId: null}, {reload: true, inherit: false});\n                });\n            } else {\n                ContentRepository.delete(vm.contentId).then(function() {\n                    self.closeModal();\n                    // refresh current state\n                    if (vm.contentType === 'category') {\n                        // removed category\n                        Utils.Storage.removeStorageItem('contentListParent');\n                        Utils.$state.go('content.list', {contentId: null}, {reload: true, inherit: false});\n                        Utils.Notifications.addSuccess('CATEGORY_HAS_BEEN_DELETED');\n                    } else {\n                        // removed content\n                        if (Utils.$state.$current.name === 'content.show.details') {\n                            Utils.$state.go('content.trashcan', {contentId: null}, {reload: true, inherit: false});\n                        } else {\n                            Utils.$state.go(Utils.$state.current, {}, {reload: true});\n                        }\n                        Utils.Notifications.addSuccess('CONTENT_HAS_BEEN_MOVED_TO_TRASH');\n                    }\n                });\n            }\n        }\n    };\n\n}\nContentDeleteCtrl.$inject = ['$scope', 'Utils', '$modal', 'ContentRepository'];\nmodule.exports = ContentDeleteCtrl;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class ContentPublishedAtEditCtrl\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction ContentPublishedAtEditCtrl($scope, Utils, $modal, ContentRepository) {\n    var vm = this;\n    var viewPath = 'gzero/admin/views/content/directives/';\n    // Route modal\n    vm.editModal = {\n        /**\n         * Function initiates the AngularStrap modal\n         *\n         * @param title translatable title of modal\n         */\n        initModal: function(title) {\n            var self = this;\n            self.modal = $modal({\n                scope: $scope,\n                title: title,\n                templateUrl: viewPath + 'contentEditPublishedAtModal.tpl.html',\n                show: true,\n                placement: 'center'\n            });\n        },\n        /**\n         * Function shows the AngularStrap modal\n         *\n         * @param contentId content id to be updated, it is saved in the scope\n         * @param contentPublishedAt content published at date\n         */\n        showModal: function(contentId, contentPublishedAt) {\n            var self = this;\n            vm.contentId = contentId;\n            vm.contentPublishedAt = contentPublishedAt;\n            self.initModal('EDIT');\n        },\n        /**\n         * Function close the modal\n         *\n         */\n        closeModal: function() {\n            var self = this;\n            self.modal.hide();\n        },\n        /**\n         * Function performs the RestAngular patch function for content in scope\n         *\n         */\n        saveContentPublishedAt: function() {\n            var self = this;\n            var dateTime = moment($scope.vm.contentPublishedAt).utc().format('YYYY-MM-DD HH:mm:ss');\n            var content = {\n                published_at: $scope.vm.contentPublishedAt ? dateTime : null\n            };\n\n            ContentRepository.updateContent(vm.contentId, content).then(function(response) {\n                self.closeModal();\n                Utils.$state.go(Utils.$state.current, {}, {reload: true});\n            });\n\n        }\n    };\n}\nContentPublishedAtEditCtrl.$inject = ['$scope', 'Utils', '$modal', 'ContentRepository'];\nmodule.exports = ContentPublishedAtEditCtrl;\n","'use strict';\n\nfunction ContentRestoreCtrl($scope, Utils, $modal, ContentRepository) {\n    var vm = this;\n    var viewPath = 'gzero/admin/views/content/directives/';\n    // Restore modal\n    vm.restoreModal = {\n        /**\n         * Function initiates the AngularStrap modal\n         *\n         * @param title translatable title of modal\n         * @param message translatable messages of modal\n         */\n        initModal: function(title, message) {\n            var self = this;\n            self.modal = $modal({\n                scope: $scope,\n                title: title,\n                content: message,\n                templateUrl: viewPath + 'contentRestoreModal.tpl.html',\n                show: true,\n                placement: 'center'\n            });\n        },\n        /**\n         * Function shows the AngularStrap modal\n         *\n         * @param contentId content id to be restored, it is saved in the scope\n         */\n        showModal: function(contentId) {\n            var self = this;\n            vm.contentId = contentId;\n            self.initModal('PLEASE_CONFIRM', 'RESTORE_CONTENT_QUESTION');\n\n            // Bind hotkeys\n            Utils.hotkeys.add({\n                combo: 'enter',\n                description: Utils.$filter('translate')('CONFIRM_CONTENT_RESTORE'),\n                callback: function() {\n                    self.restoreContent();\n                }\n            });\n        },\n        /**\n         * Function close the modal\n         *\n         */\n        closeModal: function() {\n            var self = this;\n            self.modal.hide();\n            Utils.hotkeys.del('enter');\n        },\n        /**\n         * Function restore softDeleted content\n         * @param editAfterRestore if true redirect to edit state after restore\n         */\n        restoreContent: function(editAfterRestore) {\n            var self = this;\n            ContentRepository.restoreContent(vm.contentId).then(function(response) {\n                self.closeModal();\n                if (editAfterRestore) {\n                    Utils.$state.go('content.edit.details', {contentId: vm.contentId, langCode: $scope.currentLang.code});\n                } else {\n                    Utils.$state.go(Utils.$state.current, {}, {reload: true});\n                }\n                Utils.Notifications.addSuccess('CONTENT_HAS_BEEN_RESTORED');\n            });\n        }\n    };\n}\nContentRestoreCtrl.$inject = ['$scope', 'Utils', '$modal', 'ContentRepository', 'Notifications'];\nmodule.exports = ContentRestoreCtrl;\n","'use strict';\n\nfunction ContentRouteCtrl($scope, Utils, $modal, ContentRepository) {\n    var vm = this;\n    var viewPath = 'gzero/admin/views/content/directives/';\n    // Route modal\n    vm.editRouteModal = {\n        /**\n         * Function initiates the AngularStrap modal\n         *\n         * @param title translatable title of modal\n         */\n        initModal: function(title) {\n            var self = this;\n            self.modal = $modal({\n                scope: $scope,\n                title: title,\n                templateUrl: viewPath + 'contentEditRouteModal.tpl.html',\n                show: true,\n                placement: 'center'\n            });\n        },\n        /**\n         * Function shows the AngularStrap modal\n         *\n         * @param contentId content id to be removed, it is saved in the scope\n         * @param contentRoute content route\n         * @param langCode route translation language\n         */\n        showModal: function(contentId, contentRoute, langCode) {\n            var self = this;\n            vm.contentId = contentId;\n            vm.contentRoute = contentRoute.substr(contentRoute.lastIndexOf('/') + 1); // last url segment\n            vm.oldRoute = vm.contentRoute;\n            vm.langCode = langCode;\n            self.initModal('EDIT');\n        },\n        /**\n         * Function close the modal\n         *\n         */\n        closeModal: function() {\n            var self = this;\n            self.modal.hide();\n        },\n        /**\n         * Function performs the RestAngular DELETE action for content id in scope\n         *\n         */\n        saveContentRoute: function() {\n            var self = this;\n            var newRoute = {\n                language_code: vm.langCode,\n                path: vm.contentRoute\n            };\n            // only when route has been changed\n            if (vm.contentRoute !== vm.oldRoute) {\n                ContentRepository.updateContentRoute(vm.contentId, newRoute).then(function(response) {\n                    self.closeModal();\n                    Utils.$state.go(Utils.$state.current, {}, {reload: true});\n                });\n            } else {\n                self.closeModal();\n            }\n        }\n    };\n}\nContentRouteCtrl.$inject = ['$scope', 'Utils', '$modal', 'ContentRepository'];\nmodule.exports = ContentRouteCtrl;\n","'use strict';\n\nfunction ContentThemeEditCtrl($scope, Utils, $modal, ContentRepository) {\n    var vm = this;\n    var viewPath = 'gzero/admin/views/content/directives/';\n    // Theme modal\n    vm.editModal = {\n        /**\n         * Function initiates the AngularStrap modal\n         *\n         * @param title translatable title of modal\n         */\n        initModal: function(title) {\n            var self = this;\n            self.modal = $modal({\n                scope: $scope,\n                title: title,\n                templateUrl: viewPath + 'contentEditThemeModal.tpl.html',\n                show: true,\n                placement: 'center'\n            });\n        },\n        /**\n         * Function shows the AngularStrap modal\n         *\n         * @param contentId content id to be updated, it is saved in the scope\n         * @param contentTheme content theme\n         */\n        showModal: function(contentId, contentTheme) {\n            var self = this;\n            vm.contentId = contentId;\n            vm.contentTheme = contentTheme;\n            self.initModal('EDIT');\n        },\n        /**\n         * Function close the modal\n         *\n         */\n        closeModal: function() {\n            var self = this;\n            self.modal.hide();\n        },\n        /**\n         * Function performs the RestAngular patch function for content in scope\n         *\n         */\n        saveContentWeight: function() {\n            var self = this;\n            var content = {\n                theme: $scope.vm.contentTheme\n            };\n\n            ContentRepository.updateContent(vm.contentId, content).then(function(response) {\n                self.closeModal();\n                Utils.$state.go(Utils.$state.current, {}, {reload: true});\n            });\n\n        }\n    };\n}\nContentThemeEditCtrl.$inject = ['$scope', 'Utils', '$modal', 'ContentRepository'];\nmodule.exports = ContentThemeEditCtrl;\n","'use strict';\n\nfunction ContentThumbCtrl($scope, Utils, $modal, ContentRepository, FilesRepository) {\n    var vm = this;\n    var viewPath = 'gzero/admin/views/content/directives/';\n\n    vm.searchQuery = null;\n\n    vm.modal = {\n        /**\n         * Function initiates the AngularStrap modal\n         *\n         * @param title translatable title of modal\n         */\n        initModal: function(title) {\n            var self = this;\n            self.modal = $modal({\n                scope: $scope,\n                title: title,\n                templateUrl: viewPath + 'contentThumbModal.tpl.html',\n                show: true,\n                placement: 'center'\n            });\n        },\n        /**\n         * Function shows the AngularStrap modal\n         *\n         * @param contentId content id to be updated, it is saved in the scope\n         * @param thumbId content thumbId\n         */\n        showModal: function(contentId, thumbId) {\n            var self = this;\n            vm.contentId = contentId;\n            vm.thumbId = thumbId;\n            self.getFiles();\n            self.initModal('THUMBNAIL');\n        },\n        /**\n         * Function close the modal\n         *\n         */\n        closeModal: function() {\n            var self = this;\n            self.modal.hide();\n        },\n        searchFiles: function(fileName) {\n            var params = {\n                type: 'image',\n                limit: 20\n            };\n\n            if (fileName) {\n                params.q = fileName;\n            }\n\n            vm.thumbId = null;\n            this.loadFiles(params);\n        },\n        selectFile: function(file) {\n            if (typeof file.id !== 'undefined') {\n                vm.thumbId = file.id;\n            }\n        },\n        getFiles: function() {\n            var params = {\n                type: 'image',\n                limit: 100\n            };\n\n            this.loadFiles(params);\n        },\n        loadFiles: function(params) {\n\n            FilesRepository.list(params).then(function(response) {\n                vm.files = FilesRepository.clean(response);\n            });\n        },\n        /**\n         * Function performs the RestAngular patch function for content in scope\n         *\n         */\n        save: function() {\n            var self = this;\n            var content = {\n                thumb_id: vm.thumbId\n            };\n\n            ContentRepository.updateContent(vm.contentId, content).then(function(response) {\n                self.closeModal();\n                Utils.$state.go(Utils.$state.current, {}, {reload: true});\n            });\n        }\n    };\n}\nContentThumbCtrl.$inject = ['$scope', 'Utils', '$modal', 'ContentRepository', 'FilesRepository'];\nmodule.exports = ContentThumbCtrl;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class ContentTogglePropertyCtrl\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction ContentTogglePropertyCtrl(Utils, ContentRepository) {\n    var vm = this;\n\n    vm.toggleProperty = {\n\n        toggleProperty: function(contentId, propertyName, currentValue) {\n            var newValue = !currentValue;\n            var content = {};\n            content[propertyName] = newValue;\n            ContentRepository.updateContent(contentId, content).then(\n                function() {\n                    Utils.$state.reload();\n                }\n            );\n        }\n\n    };\n\n}\nContentTogglePropertyCtrl.$inject = ['Utils', 'ContentRepository'];\nmodule.exports = ContentTogglePropertyCtrl;\n","'use strict';\n\nfunction ContentWeightEditCtrl($scope, Utils, $modal, ContentRepository) {\n    var vm = this;\n    var viewPath = 'gzero/admin/views/content/directives/';\n    // Weight modal\n    vm.editModal = {\n        /**\n         * Function initiates the AngularStrap modal\n         *\n         * @param title translatable title of modal\n         */\n        initModal: function(title) {\n            var self = this;\n            self.modal = $modal({\n                scope: $scope,\n                title: title,\n                templateUrl: viewPath + 'contentEditWeightModal.tpl.html',\n                show: true,\n                placement: 'center'\n            });\n        },\n        /**\n         * Function shows the AngularStrap modal\n         *\n         * @param contentId content id to be updated, it is saved in the scope\n         * @param contentWeight content weight\n         */\n        showModal: function(contentId, contentWeight) {\n            var self = this;\n            vm.contentId = contentId;\n            vm.contentWeight = contentWeight;\n            self.initModal('EDIT');\n        },\n        /**\n         * Function close the modal\n         *\n         */\n        closeModal: function() {\n            var self = this;\n            self.modal.hide();\n        },\n        /**\n         * Function performs the RestAngular patch function for content in scope\n         *\n         */\n        saveContentWeight: function() {\n            var self = this;\n            var content = {\n                weight: $scope.vm.contentWeight\n            };\n\n            ContentRepository.updateContent(vm.contentId, content).then(function(response) {\n                self.closeModal();\n                Utils.$state.go(Utils.$state.current, {}, {reload: true});\n            });\n\n        }\n    };\n}\nContentWeightEditCtrl.$inject = ['$scope', 'Utils', '$modal', 'ContentRepository'];\nmodule.exports = ContentWeightEditCtrl;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class SetTranslationAsActive\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction SetTranslationAsActiveCtrl($scope, Utils, $modal, ContentRepository) {\n    var vm = this;\n    var viewPath = 'gzero/admin/views/content/directives/';\n    // Set as active modal\n    vm.setAsActiveModal = {\n\n        /**\n         * Return translation with specified id property from translations array\n         * and fetch lang property\n         *\n         * @param translations Translations array\n         * @param id translation id\n         * @returns Object\n         */\n        getTranslationById: function(translations, id) {\n            var self = this;\n            var translation = translations.shift();\n            if (parseInt(translation.id) === parseInt(id)) {\n                return translation;\n            } else {\n                return self.getTranslationById(translations, id);\n            }\n        },\n\n        /**\n         * Function initiates the AngularStrap modal\n         *\n         * @param title translatable title of modal\n         * @param message translatable messages of modal\n         */\n        initModal: function(title, message) {\n            var self = this;\n            self.modal = $modal({\n                scope: $scope,\n                title: title,\n                content: message,\n                templateUrl: viewPath + 'setTranslationAsActiveModal.tpl.html',\n                show: true,\n                placement: 'center'\n            });\n        },\n\n        /**\n         * Function shows the AngularStrap modal\n         *\n         * @param translationId id of selected translation\n         * @param contentId current active content id\n         */\n        showModal: function(translationId, contentId) {\n            var self = this;\n            vm.contentId = contentId;\n            vm.translations = $scope.tableParams.data.slice(0);\n            vm.translationId = translationId;\n            vm.selectedTranslation = self.getTranslationById(vm.translations, vm.translationId);\n            self.initModal('PLEASE_CONFIRM', 'SET_TRANSLATION_AS_ACTIVE_QUESTION');\n        },\n\n        /**\n         * Function close the modal\n         *\n         */\n        closeModal: function() {\n            var self = this;\n            self.modal.hide();\n        },\n\n        /**\n         * Function performs the RestAngular action and set selected translation\n         * as a new active translation\n         */\n        setAsActive: function() {\n            var self = this;\n            ContentRepository.newContentTranslation(vm.contentId, vm.selectedTranslation).then(function() {\n                Utils.Notifications.addSuccess('THE_CHANGES_HAVE_BEEN_SAVED');\n                Utils.$state.reload();\n                self.closeModal();\n            });\n        }\n    };\n}\nSetTranslationAsActiveCtrl.$inject = ['$scope', 'Utils', '$modal', 'ContentRepository'];\nmodule.exports = SetTranslationAsActiveCtrl;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class DeleteTranslationCtrl\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction DeleteTranslationCtrl($scope, Utils, $modal, ContentRepository) {\n    var vm = this;\n    var viewPath = 'gzero/admin/views/content/directives/';\n    // Delete modal\n    vm.deleteModal = {\n        /**\n         * Function initiates the AngularStrap modal\n         *\n         * @param title translatable title of modal\n         * @param message translatable messages of modal\n         */\n        initModal: function(title, message) {\n            var self = this;\n            self.modal = $modal({\n                scope: $scope,\n                title: title,\n                content: message,\n                templateUrl: viewPath + 'translationDeleteModal.tpl.html',\n                show: true,\n                placement: 'center'\n            });\n        },\n\n        /**\n         * Function shows the AngularStrap modal\n         *\n         * @param contentId content id\n         * @param translationId translation id\n         */\n        showModal: function(contentId, translationId) {\n            var self = this;\n            vm.contentId = contentId;\n            vm.translationId = translationId;\n            self.initModal('PLEASE_CONFIRM', 'DELETE_TRANSLATION_QUESTION');\n        },\n\n        /**\n         * Function close the modal\n         *\n         */\n        closeModal: function() {\n            var self = this;\n            self.modal.hide();\n        },\n\n        /**\n         * Function performs the RestAngular DELETE action for translation id in scope\n         *\n         */\n        deleteContent: function() {\n            var self = this;\n            self.closeModal();\n            ContentRepository.deleteTranslation(vm.contentId, vm.translationId).then(function() {\n                Utils.Notifications.addSuccess('TRANSLATION_HAS_BEEN_DELETED');\n                Utils.$state.reload();\n            });\n        }\n    };\n}\nDeleteTranslationCtrl.$inject = ['$scope', 'Utils', '$modal', 'ContentRepository'];\nmodule.exports = DeleteTranslationCtrl;\n","'use strict';\n\nfunction CharactersCounter() {\n\treturn {\n\t\ttemplateUrl: 'gzero/admin/views/content/directives/charactersCounter.tpl.html',\n\t\trestrict: 'A',\n\t\tscope: {\n\t\t\t'characters': '@count'\n\t\t}\n\t};\n}\n\nCharactersCounter.$inject = [];\nmodule.exports = CharactersCounter;","'use strict';\n\nfunction ContentActionsDropdown($dropdown) {\n    return {\n        scope: {contentActionsDropdown: '=', record: '=', lang: '='},\n        controller: 'ContentDeleteCtrl',\n        controllerAs: 'vm',\n        restrict: 'A',\n        link: function(scope, element, attrs, ContentDeleteCtrl) {\n            var dropdown = $dropdown(element, {\n                templateUrl: 'gzero/admin/views/content/directives/contentActionsDropdown.tpl.html',\n                animation: 'am-flip-x',\n                placement: 'bottom-right'\n            });\n\n            element.on('click', function() {\n                // TODO better params replacement and functions handling\n                _.mapValues(scope.contentActionsDropdown, function(n) {\n                    if (typeof n.href !== 'undefined') {\n                        // Record id\n                        if (n.href.indexOf('record_id') !== -1) {\n                            n.href = n.href.replace('record_id', scope.record.id);\n                        }\n                        // Lang code\n                        if (n.href.indexOf('lang_code') !== -1) {\n                            n.href = n.href.replace('lang_code', '\"' + scope.lang.code + '\"');\n                        }\n                    }\n                    return n;\n                });\n\n                dropdown.$scope.content = scope.contentActionsDropdown;\n                dropdown.$scope.record = scope.record; // Pass record to the view\n                dropdown.$scope.lang = scope.lang; // Pass lang to the view\n                dropdown.$scope.deleteModal = ContentDeleteCtrl.deleteModal; // Pass delete action to the view\n            });\n        }\n    };\n}\n\nContentActionsDropdown.$inject = [];\nmodule.exports = ContentActionsDropdown;\n","'use strict';\n\nfunction ContentDeleteButton() {\n    return {\n        scope: true,\n        restrict: 'A',\n        controller: 'ContentDeleteCtrl',\n        controllerAs: 'vm',\n        bindToController: true,// because the scope is isolated\n        link: function(scope, element, attrs, ContentDeleteCtrl) {\n            element.on('click', function() {\n                // Show a delete modal from a controller\n                ContentDeleteCtrl.deleteModal.showModal(attrs.id, attrs.type, attrs.force === 'true');\n            });\n        }\n    };\n}\n\nContentDeleteButton.$inject = [];\nmodule.exports = ContentDeleteButton;\n","'use strict';\n\nfunction ContentEditRouteButton() {\n    return {\n        scope: true,\n        restrict: 'A',\n        controller: 'ContentRouteCtrl',\n        controllerAs: 'vm',\n        bindToController: true,// because the scope is isolated\n        link: function(scope, element, attrs, ContentRouteCtrl) {\n            element.on('click', function() {\n                // Show a delete modal from a controller\n                ContentRouteCtrl.editRouteModal.showModal(attrs.id, attrs.route, attrs.lang);\n            });\n        }\n    };\n}\n\nContentEditRouteButton.$inject = [];\nmodule.exports = ContentEditRouteButton;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class ContentPublishedAtEditButton\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction ContentPublishedAtEditButton() {\n    return {\n        scope: true,\n        restrict: 'A',\n        controller: 'ContentPublishedAtEditCtrl',\n        controllerAs: 'vm',\n        bindToController: true,\n        link: function(scope, element, attrs, ContentPublishedAtEditCtrl) {\n            element.on('click', function() {\n                ContentPublishedAtEditCtrl.editModal.showModal(\n                    attrs.contentId,\n                    attrs.contentPublishedAt\n                );\n            });\n        }\n    };\n}\n\nContentPublishedAtEditButton.$inject = [];\nmodule.exports = ContentPublishedAtEditButton;\n","'use strict';\n\nfunction ContentRestoreButton() {\n    return {\n        scope: true,\n        restrict: 'A',\n        controller: 'ContentRestoreCtrl',\n        controllerAs: 'vm',\n        bindToController: true,// because the scope is isolated\n        link: function(scope, element, attrs, ContentRestoreCtrl) {\n            element.on('click', function() {\n                // Show a delete modal from a controller\n                ContentRestoreCtrl.restoreModal.showModal(attrs.id);\n            });\n        }\n    };\n}\n\nContentRestoreButton.$inject = [];\nmodule.exports = ContentRestoreButton;\n","'use strict';\n\nfunction ContentThemeEditButton() {\n    return {\n        scope: true,\n        restrict: 'A',\n        controller: 'ContentThemeEditCtrl',\n        controllerAs: 'vm',\n        bindToController: true,\n        link: function(scope, element, attrs, ContentThemeEditCtrl) {\n            element.on('click', function() {\n                ContentThemeEditCtrl.editModal.showModal(\n                    attrs.contentId,\n                    attrs.contentTheme\n                );\n            });\n        }\n    };\n}\n\nContentThemeEditButton.$inject = [];\nmodule.exports = ContentThemeEditButton;\n","'use strict';\n\nfunction ContentThumbButton() {\n    return {\n        scope: true,\n        restrict: 'A',\n        controller: 'ContentThumbCtrl',\n        controllerAs: 'vm',\n        bindToController: true,\n        link: function(scope, element, attrs, ContentThumbCtrl) {\n            element.on('click', function() {\n                ContentThumbCtrl.modal.showModal(\n                    attrs.contentId,\n                    attrs.thumbId\n                );\n            });\n        }\n    };\n}\n\nContentThumbButton.$inject = [];\nmodule.exports = ContentThumbButton;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class ContentTogglePropertyButton\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction ContentTogglePropertyButton() {\n    return {\n        scope: true,\n        restrict: 'A',\n        controller: 'ContentTogglePropertyCtrl',\n        controllerAs: 'vm',\n        bindToController: true,\n        link: function(scope, element, attrs, ContentTogglePropertyCtrl) {\n            element.on('click', function() {\n                ContentTogglePropertyCtrl.toggleProperty.toggleProperty(\n                    attrs.contentId,\n                    attrs.propertyName,\n                    String(attrs.value) !== 'false'\n                );\n            });\n        }\n    };\n}\n\nContentTogglePropertyButton.$inject = [];\nmodule.exports = ContentTogglePropertyButton;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class ContentWeightEditButton\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction ContentWeightEditButton() {\n    return {\n        scope: true,\n        restrict: 'A',\n        controller: 'ContentWeightEditCtrl',\n        controllerAs: 'vm',\n        bindToController: true,\n        link: function(scope, element, attrs, ContentWeightEditCtrl) {\n            element.on('click', function() {\n                ContentWeightEditCtrl.editModal.showModal(\n                    attrs.contentId,\n                    parseInt(attrs.contentWeight)\n                );\n            });\n        }\n    };\n}\n\nContentWeightEditButton.$inject = [];\nmodule.exports = ContentWeightEditButton;\n","'use strict';\n\nfunction SetTranslationAsActiveButton() {\n    return {\n        scope: true,\n        restrict: 'A',\n        controller: 'SetTranslationAsActiveCtrl',\n        controllerAs: 'vm',\n        bindToController: true,\n        link: function(scope, element, attrs, SetTranslationAsActiveCtrl) {\n            element.on('click', function() {\n                SetTranslationAsActiveCtrl.setAsActiveModal.showModal(attrs.id, attrs.content);\n            });\n        }\n    };\n}\n\nSetTranslationAsActiveButton.$inject = [];\nmodule.exports = SetTranslationAsActiveButton;\n","'use strict';\n\nfunction TranslationDeleteButton() {\n    return {\n        scope: true,\n        restrict: 'A',\n        controller: 'TranslationDeleteCtrl',\n        controllerAs: 'vm',\n        bindToController: true,\n        link: function(scope, element, attrs, TranslationDeleteCtrl) {\n            element.on('click', function() {\n                TranslationDeleteCtrl.deleteModal.showModal(attrs.content, attrs.translationId);\n            });\n        }\n    };\n}\n\nTranslationDeleteButton.$inject = [];\nmodule.exports = TranslationDeleteButton;\n","'use strict';\n\nangular.module('admin.content', ['ngTable', 'ui.tree'])\n    .config([\n        '$stateProvider',\n        function($stateProvider) {\n            var viewPath = 'gzero/admin/views/content/';\n            // Now set up the states\n            $stateProvider\n                .state('content', {\n                    url: '/content',\n                    controller: 'ContentDashboardCtrl',\n                    templateUrl: viewPath + 'index.html',\n                    resolve: {\n                        categories: [\n                            'ContentRepository', function(ContentRepository) {\n                                // get tree of all categories\n                                return ContentRepository.tree({\n                                    only_categories: true\n                                });\n                            }\n                        ]\n                    }\n                })\n                // CONTENT LIST\n                .state('content.list', {\n                    url: '/list/{contentId}?is_active&page&perPage',\n                    resolve: {\n                        listParent: [\n                            '$stateParams', 'Utils', 'ContentRepository', function($stateParams, Utils, ContentRepository) {\n                                // if state param has category id\n                                if ($stateParams.contentId) {\n                                    Utils.Storage.setStorageItem({contentListParent: $stateParams.contentId});\n                                    return ContentRepository.one($stateParams.contentId);\n                                } else {\n                                    // if storage has category id\n                                    if (Utils.Storage.getStorageItem('contentListParent')) {\n                                        $stateParams.contentId = Utils.Storage.getStorageItem('contentListParent');\n                                        return ContentRepository.one(Utils.Storage.getStorageItem('contentListParent'));\n                                    }\n                                }\n                            }\n                        ],\n                        openCategories: [\n                            // get open categories from Storage\n                            'Utils', function(Utils) {\n                                return Utils.Storage.getStorageItem('openCategories');\n                            }\n                        ]\n                    },\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'list.html',\n                            controller: 'ContentListCtrl'\n                        },\n                        'quickSidebarLeft': {\n                            templateUrl: viewPath + 'categories.html',\n                            controller: 'ContentCategoryTreeCtrl'\n                        }\n                    }\n                })\n                // CONTENT SHOW\n                .state('content.show', {\n                    url: '/{contentId}/show/{langCode}',\n                    abstract: [\n                        // redirect to active tab on language change\n                        '$state', function($state) {\n                            return _.startsWith($state.current.name, 'content.show') ? $state.current.name : '.details';\n                        }\n                    ],\n                    resolve: {\n                        langCode: [\n                            '$state', '$stateParams', function($state, $stateParams) {\n                                return $stateParams.langCode;\n                            }\n                        ],\n                        content: [\n                            '$stateParams', 'ContentRepository', function($stateParams, ContentRepository) {\n                                return ContentRepository.one($stateParams.contentId);\n                            }\n                        ],\n                        author: [\n                            'content', 'UserRepository', function(content, UserRepository) {\n                                return UserRepository.one(content.author_id);\n                            }\n                        ]\n                    },\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'show.html',\n                            controller: 'ContentDetailsCtrl'\n                        },\n                        'langSwitcher@content.show': {\n                            templateUrl: viewPath + 'details/langSwitcher.html'\n\n                        },\n                        'contentSettings@content.show': {\n                            templateUrl: viewPath + 'details/settings.html'\n\n                        }\n                    }\n                })\n                .state('content.show.details', {\n                    url: '/details',\n                    deepStateRedirect: true,\n                    sticky: true,\n                    views: {\n                        'contentTab': {\n                            templateUrl: viewPath + 'details/tabs/details.html'\n                        }\n                    }\n                })\n                .state('content.show.history', {\n                    url: '/history?isActive&type&page&perPage',\n                    deepStateRedirect: true,\n                    sticky: true,\n                    views: {\n                        'contentTab': {\n                            templateUrl: viewPath + 'details/tabs/history.html',\n                            controller: 'ContentHistoryCtrl'\n                        }\n                    }\n                })\n                .state('content.show.blocks', {\n                    url: '/blocks',\n                    deepStateRedirect: true,\n                    sticky: true,\n                    resolve: {\n                        blocks: [\n                            '$stateParams', 'ContentRepository', function($stateParams, ContentRepository) {\n                                return ContentRepository.blocks($stateParams.contentId, {language_code: $stateParams.langCode});\n                            }\n                        ]\n                    },\n                    views: {\n                        'contentTab': {\n                            templateUrl: viewPath + 'details/tabs/blocks.html',\n                            controller: 'ContentBlocksCtrl'\n                        }\n                    }\n                })\n                .state('content.show.files', {\n                    url: '/files/{type}',\n                    deepStateRedirect: true,\n                    sticky: true,\n                    resolve:{\n                        entity: function(content){\n                            return content;\n                        }\n                    },\n                    views: {\n                        'contentTab': {\n                            templateUrl: 'gzero/admin/views/core/details/tabs/files.html',\n                            controller: 'EntityFilesCtrl'\n                        }\n                    }\n                })\n                // CONTENT EDIT\n                .state('content.edit', {\n                    url: '/{contentId}/edit/{langCode}',\n                    abstract: '.index',\n                    resolve: {\n                        langCode: [\n                            '$state', '$stateParams', function($state, $stateParams) {\n                                return $stateParams.langCode;\n                            }\n                        ],\n                        content: [\n                            '$stateParams', 'ContentRepository', function($stateParams, ContentRepository) {\n                                return ContentRepository.one($stateParams.contentId);\n                            }\n                        ],\n                        author: [\n                            'content', 'UserRepository', function(content, UserRepository) {\n                                return UserRepository.one(content.author_id);\n                            }\n                        ]\n                    },\n                    data: {\n                        showMask: true // enter edit mode\n                    },\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'show.html',\n                            controller: 'ContentDetailsCtrl'\n                        },\n                        'langSwitcher@content.edit': {\n                            templateUrl: viewPath + 'details/langSwitcher.html'\n\n                        },\n                        'contentSettings@content.edit': {\n                            templateUrl: viewPath + 'details/settings.html'\n\n                        }\n                    }\n                })\n                .state('content.edit.index', {\n                    url: '',\n                    views: {\n                        'contentTab': {\n                            templateUrl: viewPath + 'details/tabs/details.html'\n                        }\n                    }\n                })\n                .state('content.edit.details', {\n                    url: '/details',\n                    views: {\n                        'contentTab': {\n                            controller: 'ContentDetailsEditCtrl',\n                            templateUrl: viewPath + 'details/tabs/detailsEdit.html'\n                        }\n                    }\n                })\n                // CONTENT TRASHCAN\n                .state('content.trashcan', {\n                    url: '/trashcan?is_active&type&page&perPage',\n                    resolve: {\n                        listParent: [\n                            function() {\n                                return undefined;\n                            }\n                        ],\n                        openCategories: [\n                            // get open categories from Storage\n                            'Storage', function(Storage) {\n                                return Storage.getStorageItem('openCategories');\n                            }\n                        ]\n                    },\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'trashcan.html',\n                            controller: 'ContentTrashcanCtrl'\n                        },\n                        'quickSidebarLeft': {\n                            templateUrl: viewPath + 'categories.html',\n                            controller: 'ContentCategoryTreeCtrl'\n                        }\n                    }\n                })\n                // CONTENT ADD\n                .state('content.add', {\n                    url: '/add/{type}',\n                    resolve: {\n                        listParent: [\n                            'Utils', 'ContentRepository', function(Utils, ContentRepository) {\n                                // if storage has category id\n                                if (Utils.Storage.getStorageItem('contentListParent')) {\n                                    return ContentRepository.one(Utils.Storage.getStorageItem('contentListParent'));\n                                }\n                            }\n                        ]\n                    },\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'add.html',\n                            controller: 'ContentAddCtrl'\n                        }\n                    }\n                })\n                // CONTENT ADD TRANSLATION\n                .state('content.addTranslation', {\n                    url: '/{contentId}/add-translation/{langCode}',\n                    resolve: {\n                        content: [\n                            '$stateParams', 'ContentRepository', function($stateParams, ContentRepository) {\n                                return ContentRepository.one($stateParams.contentId);\n                            }\n                        ]\n                    },\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'addTranslation.html',\n                            controller: 'ContentAddTranslationCtrl'\n                        }\n                    }\n                });\n        }\n    ])\n    .controller('ContentAddCtrl', require('./controllers/ContentAddCtrl'))\n    .controller('ContentDeleteCtrl', require('./controllers/directives/ContentDeleteCtrl'))\n    .controller('ContentRestoreCtrl', require('./controllers/directives/ContentRestoreCtrl'))\n    .controller('ContentCategoryTreeCtrl', require('./controllers/ContentCategoryTreeCtrl'))\n    .controller('ContentDashboardCtrl', require('./controllers/ContentDashboardCtrl'))\n    .controller('ContentDetailsCtrl', require('./controllers/ContentDetailsCtrl'))\n    .controller('ContentDetailsEditCtrl', require('./controllers/ContentDetailsEditCtrl'))\n    .controller('ContentHistoryCtrl', require('./controllers/ContentHistoryCtrl'))\n    .controller('ContentBlocksCtrl', require('./controllers/ContentBlocksCtrl'))\n    .controller('ContentListCtrl', require('./controllers/ContentListCtrl'))\n    .controller('ContentTrashcanCtrl', require('./controllers/ContentTrashcanCtrl'))\n    .controller('ContentAddTranslationCtrl', require('./controllers/ContentAddTranslationCtrl'))\n    .controller('ContentRouteCtrl', require('./controllers/directives/ContentRouteCtrl'))\n    .controller('SetTranslationAsActiveCtrl', require('./controllers/directives/SetTranslationAsActiveCtrl'))\n    .controller('TranslationDeleteCtrl', require('./controllers/directives/TranslationDeleteCtrl'))\n    .controller('ContentTogglePropertyCtrl', require('./controllers/directives/ContentTogglePropertyCtrl'))\n    .controller('ContentWeightEditCtrl', require('./controllers/directives/ContentWeightEditCtrl'))\n    .controller('ContentThemeEditCtrl', require('./controllers/directives/ContentThemeEditCtrl'))\n    .controller('ContentThumbCtrl', require('./controllers/directives/ContentThumbCtrl'))\n    .controller('ContentPublishedAtEditCtrl', require('./controllers/directives/ContentPublishedAtEditCtrl'))\n    .factory('ContentRepository', require('./services/ContentRepository.js'))\n    .directive('contentDeleteButton', require('./directives/ContentDeleteButton.js'))\n    .directive('contentRestoreButton', require('./directives/ContentRestoreButton.js'))\n    .directive('contentEditRouteButton', require('./directives/ContentEditRouteButton.js'))\n    .directive('setTranslationAsActiveButton', require('./directives/SetTranslationAsActiveButton.js'))\n    .directive('translationDeleteButton', require('./directives/TranslationDeleteButton.js'))\n    .directive('contentTogglePropertyButton', require('./directives/ContentTogglePropertyButton.js'))\n    .directive('contentPublishedAtEditButton', require('./directives/ContentPublishedAtEditButton.js'))\n    .directive('contentActionsDropdown', ['$dropdown', require('./directives/ContentActionsDropdown.js')])\n    .directive('contentWeightEditButton', ['$dropdown', require('./directives/ContentWeightEditButton.js')])\n    .directive('contentThemeEditButton', ['$dropdown', require('./directives/ContentThemeEditButton.js')])\n    .directive('contentThumbButton', ['$dropdown', require('./directives/ContentThumbButton.js')])\n    .directive('charactersCounter', require('./directives/CharactersCounter.js'))\n    .run([\n        'NavBar',\n        function(NavBar) {\n            NavBar.add(\n                {\n                    title: 'CONTENT',\n                    action: 'content.list',\n                    icon: 'fa fa-file-text-o'\n                }\n            );\n            //NavBar.addLastChild(\n            //    'CONTENT',\n            //    {\n            //        title: 'ALL_CONTENTS',\n            //        action: 'content.list',\n            //        icon: 'fa fa-th'\n            //    }\n            //);\n            //NavBar.addLastChild(\n            //    'CONTENT',\n            //    {\n            //        title: 'ADD_CONTENT',\n            //        action: 'content.add({ type: \"content\" })',\n            //        icon: 'fa fa-file-text-o'\n            //    }\n            //);\n            //NavBar.addLastChild(\n            //    'CONTENT',\n            //    {\n            //        title: 'ADD_CATEGORY',\n            //        action: 'content.add({ type: \"category\" })',\n            //        icon: 'fa fa-file-text'\n            //    }\n            //);\n        }\n    ]);\n","'use strict';\n\nfunction ContentRepository(Restangular) {\n    var api = 'contents';\n    var contents = Restangular.all(api);\n    return {\n        one: function(id, params) {\n            return Restangular.one(api, id).get(params);\n        },\n        tree: function(params) {\n            return Restangular.all('contents-tree').getList(params);\n        },\n        list: function(params) {\n            return contents.getList(params);\n        },\n        deleted: function(params) {\n            return Restangular.all('deleted-contents').getList(params);\n        },\n        children: function(id, params) {\n            return Restangular.one(api, id).getList('children', params);\n        },\n        blocks: function(id, params) {\n            return Restangular.one(api, id).getList('blocks', params);\n        },\n        newContent: function(newContent) {\n            return contents.post(newContent);\n        },\n        updateContent: function(id, content) {\n            return Restangular.one(api, id).patch(content);\n        },\n        newContentTranslation: function(id, newTranslation) {\n            return Restangular.one(api, id).all('translations').post(newTranslation);\n        },\n        updateContentRoute: function(id, newRoute) {\n            return Restangular.one(api, id).all('route').patch(newRoute);\n        },\n        translations: function(id, params) {\n            return Restangular.one(api, id).all('translations').getList(params);\n        },\n        deleteTranslation: function(contentId, translationId) {\n            return Restangular.one(api, contentId).one('translations', translationId).remove();\n        },\n        delete: function(id) {\n            return Restangular.one(api, id).remove();\n        },\n        forceDelete: function(id) {\n            return Restangular.one('deleted-contents', id).remove();\n        },\n        restoreContent: function(id) {\n            return Restangular.one('deleted-contents', id).post('restore');\n        },\n        clean: function(elem) {\n            return Restangular.stripRestangular(elem);\n        }\n    };\n}\n\nContentRepository.$inject = ['Restangular'];\nmodule.exports = ContentRepository;\n","'use strict';\n\nfunction CoreCtrl($scope, Utils, Translations, NavBar, TopNavBar) {\n    // get translations languages\n    Translations.getTranslations().then(function(response) {\n        $scope.langs = response.langs;\n        $scope.defaultLang = _.find($scope.langs, {is_default: true});\n        $scope.currentLang = $scope.transLang = Translations.getDefaultLang();\n        Translations.setFallbackLang();\n        $scope.setLang();\n    });\n\n    // admin panel language\n    $scope.setLang = function() {\n        Translations.setLang($scope.currentLang);\n        // set CKEditor language\n        Utils.ckOptions.setEditorOption({language: $scope.currentLang.code});\n    };\n\n    // translations language\n    $scope.selectLanguage = function(lang) {\n        $scope.transLang = lang;\n    };\n\n    // refresh current state\n    $scope.refreshCurrentState = function() {\n        Utils.$state.go(Utils.$state.current, {}, {reload: true});\n    };\n\n    // redirect user to previous state\n    $scope.redirectBack = function(defaultStateName) {\n        Utils.redirectBack(defaultStateName);\n    };\n\n    $scope.navBar = NavBar.getItems();\n    $scope.topNavBar = TopNavBar.getItems();\n    // if multi lang is set\n    if (typeof Utils.Config.multilang !== 'undefined') {\n        $scope.isMultiLangEnabled = (Utils.Config.multilang === 'true');\n    }\n\n    // set available entities types\n    _.forEach(Utils.getEntitiesTypes(), function(value, key) {\n        $scope[key] = value;\n    });\n\n    // if block regions are set\n    if (typeof Utils.Config.blockRegions !== 'undefined') {\n        // add disabled region and pass to view\n        $scope.blockRegions = _.union([null], Utils.Config.blockRegions);\n    }\n    // if current user id is set\n    if (typeof Utils.Config.currentUserId !== 'undefined') {\n        $scope.currentUserId = Utils.Config.currentUserId;\n    }\n    // Off canvas sidebar\n    $scope.showSidebar = false;\n    // content translations language switcher\n    $scope.showTransLangSwitcher = false;\n    // admin language switcher\n    $scope.showAdminLangSwitcher = true;\n    // pass state to view\n    $scope.$state = Utils.$state;\n\n    // check for edit state\n    $scope.$on('$stateChangeStart', function(event, toState) {\n        if (typeof toState.data !== 'undefined') {\n            if (toState.name !== 'content.edit.index') {\n                $scope.editStateName = toState.name;\n            }\n            $scope.showMask = toState.data.showMask;\n        } else {\n            $scope.editStateName = null;\n            $scope.showMask = false;\n        }\n    });\n\n    // if there is langCode param validate it\n    $scope.$on('$stateChangeSuccess', function() {\n        // set content translations language switcher\n        $scope.showTransLangSwitcher = Utils.stateIncludes(['content.list', 'content.trashcan', 'blocks.list', 'files.list']);\n        // disable admin language switcher\n        $scope.showAdminLangSwitcher = Utils.stateIncludes(['content.add', 'content.edit', 'content.addTranslation']);\n        if (Utils.$stateParams.hasOwnProperty('langCode')) {\n            Translations.checkIfLanguageIsAvailable(Utils.$stateParams.langCode);\n        }\n    });\n}\n\nCoreCtrl.$inject = ['$scope', 'Utils', 'Translations', 'NavBar', 'TopNavBar'];\nmodule.exports = CoreCtrl;\n","'use strict';\n\nfunction EntityFilesCtrl($scope, $timeout, $stateParams, Utils, entity, langCode, FilesRepository) { //jshint ignore:line\n    var type = $stateParams.type;\n    var params = {\n      'perPage': 1000 // hax to not paginate the results since we want to sort them by weight\n    };\n\n    $scope.files = [];\n    $scope.blockers = {\n        isDirty: false,\n        apiProcessing: false,\n        initializing: true\n    };\n\n    if (_.indexOf(Utils.Config.fileTypes, type) === -1) {\n        var path = Utils.$state.current.name.replace('files', 'details');\n\n        Utils.$state.go(path, {entityId: entity.id, langCode: langCode}, {reload: true});\n    }\n\n    FilesRepository.listForEntity(entity, params)\n    .then(function(response) {\n        $scope.files = _.groupBy(FilesRepository.clean(response), 'type');\n        $scope.type = type;\n\n        if (_.isUndefined($scope.files[type])) {\n            $scope.files[type] = [];\n        }\n\n        $timeout(function() {\n            $scope.blockers.initializing = false;\n        }, 100);\n    });\n\n    $scope.syncFiles = function() {\n        $scope.blockers.apiProcessing = true;\n\n        FilesRepository.syncWithEntity(entity, _.flatMap($scope.files))\n        .then(function(response) {\n            $scope.blockers.apiProcessing = false;\n            Utils.Notifications.addSuccess('THE_CHANGES_HAVE_BEEN_SAVED');\n            $scope.blockers.isDirty = false;\n        });\n    };\n\n    $scope.detachFile = function(fileId) {\n        // only when files has been selected\n        if (typeof fileId !== 'undefined') {\n            $scope.files[type] = _.reject($scope.files[type], {id: fileId});\n        }\n    };\n\n    $scope.$watchCollection('files[type]', function(newValue, oldValue) {\n            if (!$scope.blockers.initializing) {\n                _.each(newValue, function(file, index) {\n                    file.weight = index;\n                });\n\n                $scope.blockers.isDirty = true;\n            }\n        }\n    );\n\n    $scope.$on('$destroy', function() {\n        if ($scope.blockers.isDirty && !$scope.blockers.initializing && !$scope.blockers.apiProcessing) {\n            $timeout($scope.syncFiles, 150);\n        }\n    });\n}\n\nEntityFilesCtrl.$inject = ['$scope', '$timeout', '$stateParams', 'Utils', 'entity', 'langCode', 'FilesRepository'];\nmodule.exports = EntityFilesCtrl;\n","'use strict';\n\nfunction AddFilesButtonCtrl($scope, $q, Utils, $modal, FilesRepository) {\n    var vm = this;\n    var viewPath = 'gzero/admin/views/core/directives/';\n\n    vm.searchQuery = null;\n    // files modal\n    vm.filesModal = {\n        existingFiles: [],\n        filesToAdd: [],\n        /**\n         * Function initiates the AngularStrap modal\n         *\n         * @param title translatable title of modal\n         */\n        initModal: function(title) {\n            var self = this;\n            self.deferred = $q.defer();\n            self.modal = $modal({\n                scope: $scope,\n                title: title,\n                templateUrl: viewPath + 'addFilesModal.tpl.html',\n                show: true,\n                placement: 'center'\n            });\n        },\n        /**\n         * Function shows the AngularStrap modal\n         *\n         * @param entity it is saved in the scope\n         * @param langCode translation lang code\n         * @param existingFiles array with existing files collection\n         * @param filesType files type to get\n         */\n        showModal: function(entity, langCode, existingFiles, filesType) {\n            var self = this;\n\n            vm.entity = entity;\n            vm.langCode = langCode;\n            self.existingFiles = existingFiles;\n            self.filesType = filesType;\n            self.getFiles();\n            self.initModal('SELECT_FILES_TO_ADD');\n\n            return self.deferred.promise;\n        },\n        /**\n         * Function close the modal\n         *\n         */\n        closeModal: function() {\n            var self = this;\n            vm.searchQuery = null;\n            Utils.hotkeys.del('enter');\n            self.modal.hide();\n            self.deferred.resolve(self.existingFiles);\n        },\n        getFiles: function() {\n            var params = {\n                type: this.filesType,\n                perPage: 100,\n                limit: 100\n            };\n\n            this.loadFiles(params);\n        },\n        searchFiles: function(fileName) {\n            var params = {\n                type: this.filesType,\n                perPage: 100,\n                limit: 100\n            };\n\n            if (fileName) {\n                params.q = fileName;\n            }\n\n            this.loadFiles(params);\n        },\n        selectFile: function(file) {\n            if (typeof file.id !== 'undefined') {\n                if (!file.isSelected && _.findIndex(this.filesToAdd, {id: file.id}) === -1) {\n                    file.weight = this.existingFiles.length;\n                    this.filesToAdd.push(file);\n                    file.isSelected = true;\n                } else {\n                    file.isSelected = false;\n                    this.filesToAdd = _.reject(this.filesToAdd, {id: file.id});\n                }\n            }\n        },\n        addFiles: function() {\n            // only when files has been selected\n            if (this.filesToAdd.length) {\n                this.existingFiles = _.union(this.existingFiles, this.filesToAdd);\n            }\n\n            this.closeModal();\n        },\n        loadFiles: function(params) {\n            var self = this;\n\n            this.filesToAdd = [];\n            FilesRepository.list(params).then(function(response) {\n                var files = FilesRepository.clean(response);\n\n                vm.availableFiles = self.rejectExistingFiles(files);\n            });\n        },\n        rejectExistingFiles: function(files) {\n            var filesIds = _.map(this.existingFiles, 'id');\n\n            return _.reject(files, function(file) {\n                return _.indexOf(filesIds, file.id) !== -1;\n            });\n        }\n    };\n\n}\nAddFilesButtonCtrl.$inject = ['$scope', '$q', 'Utils', '$modal', 'FilesRepository'];\nmodule.exports = AddFilesButtonCtrl;\n","'use strict';\n\nfunction AddFilesButton() {\n    return {\n        scope: {\n            entity: '=',\n            lang: '@',\n            type: '=',\n            files: '='\n        },\n        restrict: 'A',\n        controller: 'AddFilesButtonCtrl',\n        controllerAs: 'vm',\n        link: function(scope, element, attrs, ContentAddFilesCtrl) {\n            element.on('click', function() {\n\n                // Show a files modal from a controller\n                ContentAddFilesCtrl.filesModal.showModal(scope.entity, scope.lang, scope.files, scope.type)\n                .then(function(response) {\n                    scope.files = response;\n                });\n            });\n        }\n    };\n}\n\nAddFilesButton.$inject = [];\nmodule.exports = AddFilesButton;\n","'use strict';\n\nfunction StatesDropdown($dropdown) {\n    return {\n        scope: {statesDropdown: '='},\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            var dropdown = $dropdown(element, {\n                templateUrl: 'gzero/admin/views/core/directives/statesDropdown.tpl.html',\n                animation: 'am-flip-x',\n                placement: 'bottom-right'\n            });\n\n            element.on('click', function() {\n                dropdown.$scope.content = scope.statesDropdown;\n            });\n        }\n    };\n}\n\nStatesDropdown.$inject = [];\nmodule.exports = StatesDropdown;\n","angular.module('CoreFilters', [])\n    /**\n     * Filter returns translatable string based on provided language code\n     *\n     * @param langCode  language code\n     *\n     * @returns {string} translatable string\n     */\n    .filter('langName', function() {\n        'use strict';\n        return function(langCode) {\n            return 'LANG_NAME_' + angular.uppercase(langCode);\n        };\n    })\n    /**\n     * Filter returns the translation in provided language\n     *\n     * @param translations the collection to iterate over\n     * @param langCode  language code\n     * @param field  field name\n     *\n     * @returns {object} translation field\n     */\n    .filter('getTranslation', function() {\n        'use strict';\n        return function(translations, langCode, field) {\n            var currentTranslation = _.filter(translations, function(translation) {\n                return translation.language_code === langCode;\n            }).shift();\n            if (_.has(currentTranslation, field)) {\n                return currentTranslation[field];\n            } else {\n                return null;\n            }\n        };\n    })\n    /**\n     * Filter returns the option value in provided language\n     *\n     * @param values the collection to iterate over\n     * @param langCode  language code\n     *\n     * @returns {object} value field\n     */\n    .filter('getOptionValue', function() {\n        'use strict';\n        return function(values, langCode) {\n            return _.filter(values, function(value, code) {\n                return code === langCode;\n            }).shift();\n        };\n    })\n    /**\n     * Filter checks if specified node exists in provided path\n     *\n     * @param path the node path to iterate over\n     * @param id  node id\n     *\n     * @returns {bool} true or false\n     */\n    .filter('nodeInPath', function() {\n        'use strict';\n        return function(path, id) {\n            // if path exists and not empty\n            if (typeof path !== 'undefined' && path.length > 0) {\n                return path.indexOf(id) > -1;\n            } else {\n                return false;\n            }\n        };\n    })\n\n    /**\n     * This filter lets you mark HTML as “safe” for angular to use and show on a page.\n     * Otherwise, angular would just show the HTML as plain text.\n     */\n    .filter('trustAsHtml', function($sce) {\n        'use strict';\n        return $sce.trustAsHtml;\n    })\n\n    /**\n     * Parse ISO 8601 date to specified format\n     * @param format string expected date format\n     */\n    .filter('formatDate', function($filter) {\n        'use strict';\n        return function(dateSTR, format) {\n            var d = Date.parse(dateSTR);\n            if (!format) {\n                format = 'yyyy-MM-dd hh:mm:ss';\n            }\n            return $filter('date')(d, format);\n        };\n    })\n\n    /**\n     * Remove html tags, and trim string to given length without breaking words\n     * @param len expected length\n     */\n    .filter('stripTagsAndTrim', function() {\n        'use strict';\n        return function(str, len) {\n            try {\n                str = str.replace(/<\\/?[^>]+(>|$)/g, '').substr(0, len);\n                str = str.substr(0, Math.min(str.length, str.lastIndexOf(' ')));\n                return str;\n            } catch (e) {\n                return '';\n            }\n        };\n    })\n\n    /**\n     * Checks if specified content is active\n     *\n     * @param content content\n     * @param langCode language code\n     *\n     * @returns Boolean\n     */\n    .filter('isContentActive', function() {\n        'use strict';\n        return function(content, langCode) {\n            var activeRoute = _.find(content.routes, {language_code: langCode, is_active: true});\n            var activeTranslation = _.find(content.translations, {language_code: langCode, is_active: true});\n\n            return (activeRoute && activeTranslation && moment().utc().isAfter(content.published_at));\n        };\n    });\n","'use strict';\n\nrequire('./filters/CoreFilters.js');\n\nangular.module('admin.core', ['CoreFilters'])\n  .config([\n    '$stateProvider',\n    function($stateProvider) {\n\n      // Now set up the states\n      $stateProvider\n        .state('logout', {\n          url: '/logout',\n          controller: function() {\n            window.location.href = Config.url + '/admin/logout';\n          }\n        });\n    }\n  ])\n  .controller('CoreCtrl', require('./controllers/CoreCtrl.js'))\n  .controller('EntityFilesCtrl', require('./controllers/EntityFilesCtrl.js'))\n  .controller('AddFilesButtonCtrl', require('./controllers/directives/AddFilesButtonCtrl'))\n  .factory('FilesRepository', require('../files/services/FilesRepository'))\n  .factory('LangRepository', require('./services/LangRepository.js'))\n  .factory('NavBar', require('./services/NavBar.js'))\n  .factory('TopNavBar', require('./services/TopNavBar.js'))\n  .factory('Notifications', require('../lib/Notifications.js'))\n  .factory('ckOptions', require('../lib/ckOptions.js'))\n  .factory('Translations', require('./services/Translations.js'))\n  .factory('Storage', require('../lib/Storage.js'))\n  .factory('Utils', require('./services/Utils.js'))\n  .directive('statesDropdown', ['$dropdown', require('./directives/StatesDropdown.js')])\n  .directive('addFilesButton', ['$dropdown', require('./directives/AddFilesButton.js')])\n  .run([\n    'TopNavBar',\n    'UserRepository',\n    'Utils',\n    function(TopNavBar, UserRepository, Utils) {\n\n      UserRepository.one(Utils.Config.currentUserId).then(function(response) {\n        var user = response;\n        user.fullName = user.first_name + ' ' + user.last_name;\n\n        TopNavBar.add(\n          {\n            title: 'PAGE_PREVIEW',\n            action: false,\n            url: '/'\n          }\n        );\n        TopNavBar.add(\n          {\n            title: user.fullName,\n            action: 'content.list'\n          }\n        );\n        TopNavBar.addLastChild(\n          user.fullName,\n          {\n            title: 'PROFILE',\n            action: 'user.edit({userId: ' + user.id + '})'\n          }\n        );\n        TopNavBar.addLastChild(\n          user.fullName,\n          {\n            title: 'LOG_OUT',\n            action: 'logout'\n          }\n        );\n      });\n\n    }\n  ]);\n","'use strict';\n\nfunction LangRepository(Restangular) {\n    var api = Restangular.all('languages');\n\n    return {\n        one: function(code) {\n            return api.get(code);\n        },\n        list: function() {\n            return api.getList();\n        },\n        clean: function(elem) {\n            return Restangular.stripRestangular(elem);\n        }\n    };\n}\n\nLangRepository.$inject = ['Restangular'];\nmodule.exports = LangRepository;\n","'use strict';\n\nfunction NavBar() {\n    /** @var Navigation */\n    return require('../../lib/navigation.js')();\n}\n\nmodule.$inject = [];\nmodule.exports = NavBar;\n","'use strict';\n\nfunction TopNavBar() {\n    /** @var Navigation */\n    return require('../../lib/navigation.js')();\n}\n\nmodule.$inject = [];\nmodule.exports = TopNavBar;\n","'use strict';\n\nfunction Translations($q, $translate, LangRepository, Utils) {\n    //create deferred promise\n    var deferred = $q.defer();\n    var languages = {};\n\n    //get languages\n    LangRepository.list().then(function(response) {\n        languages.langs = LangRepository.clean(response);\n        // resolve the promise\n        deferred.resolve(languages);\n    });\n\n    return {\n        /**\n         * Function returns the language with isDefault flag set to true\n         *\n         * @returns {object}\n         */\n        getDefaultLang: function() {\n            return _.find(languages.langs, 'is_default');\n        },\n        /**\n         * Function returns the object of languages\n         *\n         * @returns {object}\n         */\n        getTranslations: function() {\n            return deferred.promise;\n        },\n        /**\n         * Function sets the fallback language of the translation for the angular-translate module\n         *\n         * @returns {object}\n         */\n        setFallbackLang: function() {\n            $translate.fallbackLanguage([Utils.Config.fallbackLangCode]);\n        },\n        /**\n         * Function sets the language of the translation for the angular-translate module\n         *\n         * @param lang object that will be used to translate\n         */\n        setLang: function(lang) {\n            if (!_.isUndefined(lang)) {\n                $translate.use(lang.code);\n            }\n        },\n        /**\n         * Redirect if user try to access non existing language\n         * @param langCode\n         */\n        checkIfLanguageIsAvailable: function(langCode) {\n            var available = [];\n            if (languages === {}) {\n                angular.forEach(languages, function(v, k) {\n                    available.push(v.code);\n                });\n                if (available.indexOf(langCode) === -1) {\n                    Utils.Notifications.addError('LANGUAGE_NOT_FOUND');\n                    Utils.$state.go('home');\n                }\n            } else {\n                LangRepository.list().then(function(response) {\n                    angular.forEach(LangRepository.clean(response), function(v, k) {\n                        available.push(v.code);\n                    });\n                    if (available.indexOf(langCode) === -1) {\n                        Utils.Notifications.addError('LANGUAGE_NOT_FOUND');\n                        Utils.$state.go('home');\n                    }\n                });\n            }\n        }\n    };\n}\nTranslations.$inject = ['$q', '$translate', 'LangRepository', 'Utils'];\nmodule.exports = Translations;\n\n","'use strict';\n\nfunction Utils(Notifications, Storage, $state, $previousState, $stateParams, ckOptions, hotkeys, $filter) { // jshint ignore:line\n\n    return {\n        Notifications: Notifications,\n        Storage: Storage,\n        $state: $state,\n        $stateParams: $stateParams,\n        $previousState: $previousState,\n        Config: Config,\n        ckOptions: ckOptions,\n        hotkeys: hotkeys,\n        $filter: $filter,\n        /**\n         * Redirect user to previous state\n         * @param {string} defaultStateName default state name\n         */\n        redirectBack: function(defaultStateName) {\n            // gets a reference to the previous state.\n            var previousState = $previousState.get();\n            // set default name for the redirect if it is is not specified\n            if (typeof defaultStateName === 'undefined') {\n                defaultStateName = 'home'; // Redirect to home\n            }\n\n            // if there is a previousState\n            if (previousState !== null && $state.current.name !== previousState.state.name) {\n                // redirected back to the state we came from\n                $state.go(previousState.state.name, previousState.params, {reload: true});\n            } else {\n                // otherwise go to default state\n                $state.go(defaultStateName, {}, {reload: true});\n            }\n        },\n        /**\n         * function checks if one of provided state names is included in current state\n         *\n         * @param {array} stateNames the collection to iterate over\n         *\n         * @returns {bool} whether any of state exists\n         */\n        stateIncludes: function(stateNames) {\n            var includes = false;\n            if (typeof stateNames !== 'undefined') {\n                _.forEach(stateNames, function(stateName) {\n                    if ($state.includes(stateName)) {\n                        includes = true;\n                    }\n                });\n            }\n\n            return includes;\n        },\n        /**\n         * Return translation with specified lang property from translations array\n         * and fetch lang property\n         *\n         * @param translations Translations array\n         * @param langCode language code\n         * @returns Object | false\n         */\n        getTranslationByLang: function(translations, langCode) {\n            var translation = translations.shift();\n\n            if (!translation) {\n                return false;\n            }\n\n            if (translation.language_code === langCode) {\n                return translation;\n            } else {\n                return this.getTranslationByLang(translations, langCode);\n            }\n        },\n        /**\n         * Return all available entities types object from config\n         *\n         * // @TODO include 'music' and 'video' back\n         * @returns Object available entities types\n         */\n        getEntitiesTypes: function() {\n            return {\n                contentTypes: this.Config.contentTypes,\n                blockTypes: this.Config.blockTypes,\n                fileTypes: _.without(this.Config.fileTypes, 'music', 'video')\n            };\n        },\n        /**\n         * Checks if specified content is active\n         *\n         * @param content content\n         * @param langCode language code\n         *\n         * @returns Boolean\n         */\n        isContentActive: function(content, langCode) {\n            var activeRoute = _.find(content.routes, {language_code: langCode, is_active: true});\n            var activeTranslation = _.find(content.translations, {language_code: langCode, is_active: true});\n\n            return (activeRoute && activeTranslation && moment().utc().isAfter(content.published_at));\n        }\n    };\n\n}\n\nmodule.$inject = [\n    'Notifications',\n    'Storage',\n    '$state',\n    '$previousState',\n    '$stateParams',\n    'ckOptions',\n    'hotkeys',\n    '$filter'\n];\n\nmodule.exports = Utils;\n","'use strict';\n\nfunction FilesAddCtrl($q, $scope, Utils, type, Upload, FilesRepository, FileService) { //jshint ignore:line\n    $scope.files = [];\n    $scope.progress = [];\n    $scope.isBusy = false;\n    // default file record values\n    $scope.newFileDefaults = {\n        type: type,\n        is_active: 1,\n        language_code: Utils.Config.defaultLangCode\n    };\n\n    // set translations lang code\n    if (typeof $scope.transLang !== 'undefined') {\n        $scope.newFileDefaults.language_code = $scope.transLang.code;\n    }\n\n    // remove file from files queue\n    $scope.removeFile = function(index) {\n        $scope.files.splice(index, 1);\n        $scope.progress.splice(index, 1);\n    };\n\n    /* Set the default values for ngf-select and ngf-drop directives*/\n    $scope.invalidFiles = [];\n    Upload.setDefaults({\n        ngfMaxTotalSize: Utils.Config.uploadMaxTotalSize, // allowed total files size\n        ngfKeep: '\"distinct\"',\n        ngfMaxFiles: Utils.Config.uploadMaxFiles, // allowed max files number\n        ngfValidate: {pattern: FileService.getTypeExtensionsPattern(type)}, //allowed type files extensions\n        ngfModelInvalid: 'invalidFiles'\n    });\n\n    // file POST action\n    $scope.save = function() {\n        $scope.isBusy = true;\n        var promises = [];\n        _.each($scope.files, function(file, index) {\n            var defaults = _.cloneDeep($scope.newFileDefaults);\n            var data = FileService.prepareRequestData(file, defaults);\n            promises.push(FilesRepository.create(data).then(function(response) {\n                $scope.removeFile(index);\n                Utils.Notifications.addSuccess('FILE_CREATED', {fileName: file.name});\n            }, function(response) {\n                $scope.progress[index] = 0;\n                throw new Error({fileName: file.name});\n            }, function(evt) {\n                // progress notify\n                $scope.progress[index] = parseInt(100.0 * evt.loaded / evt.total);\n            }));\n        });\n\n        $q.all(promises)\n            .then(function() {\n                $scope.isBusy = false;\n                // if any of the file processing produced an error\n                Utils.$state.go('files.list', {}, {reload: true});\n            })\n            .catch(function(error) {\n                $scope.isBusy = false;\n                Utils.Notifications.addError('FILE_CREATE_ERROR', error);\n            });\n    };\n}\n\nFilesAddCtrl.$inject = ['$q', '$scope', 'Utils', 'type', 'Upload', 'FilesRepository', 'FileService'];\n\nmodule.exports = FilesAddCtrl;\n","'use strict';\n\nfunction FilesAddTranslationCtrl($scope, Utils, FilesRepository) {\n    // default translations lang code\n    $scope.newFileTranslation = {\n        language_code: Utils.$stateParams.langCode\n    };\n\n    // files translations POST action\n    $scope.addFileTranslation = function() {\n        FilesRepository.newTranslation(Utils.$stateParams.fileId, $scope.newFileTranslation)\n            .then(function(response) {\n            // Redirect user to previous state or files list\n            Utils.redirectBack('files.list');\n        });\n    };\n}\nFilesAddTranslationCtrl.$inject = ['$scope', 'Utils', 'FilesRepository'];\nmodule.exports = FilesAddTranslationCtrl;\n","'use strict';\n\nfunction FilesDetailsCtrl($scope, file, langCode, FilesRepository, Utils) {\n\n    // TODO: get registered tabs\n    $scope.tabs = [\n        {\n            title: 'PREVIEW',\n            action: 'details',\n            default: true // default active tab in settings edit mode\n        }\n    ];\n\n    // if lang code exists\n    if (typeof langCode !== 'undefined') {\n        $scope.langCode = langCode;\n    }\n\n    // if file exists\n    if (typeof file !== 'undefined') {\n        $scope.file = FilesRepository.clean(file);\n        $scope.activeTranslation = Utils.getTranslationByLang((file.translations.slice(0)), langCode);\n    }\n}\nFilesDetailsCtrl.$inject = ['$scope', 'file', 'langCode', 'FilesRepository', 'Utils'];\nmodule.exports = FilesDetailsCtrl;\n","'use strict';\n\nfunction FilesDetailsEditCtrl($scope, file, langCode, FilesRepository, Utils) {\n\n    // if file translation is not set\n    if (typeof $scope.activeTranslation === 'undefined') {\n        $scope.activeTranslation = Utils.getTranslationByLang((file.translations.slice(0)), langCode);\n    }\n\n    $scope.saveFile = function() {\n        FilesRepository.newTranslation($scope.file.id, $scope.activeTranslation).then(function() {\n            Utils.$state.go('files.show.details', {\n                fileId: file.id,\n                langCode: langCode\n            });\n            Utils.Notifications.addSuccess('THE_CHANGES_HAVE_BEEN_SAVED');\n        });\n    };\n\n}\nFilesDetailsEditCtrl.$inject = ['$scope', 'file', 'langCode', 'FilesRepository', 'Utils'];\nmodule.exports = FilesDetailsEditCtrl;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class FileController\n *\n * @package    Admin\n */\n\n'use strict';\n\nfunction FilesListCtrl($scope, Utils, FilesRepository, NgTableParams) {\n    // TODO: file add button links for other types\n    $scope.fileAddButtonLinks = [\n        {\n            text: 'ADD_IMAGES',\n            href: 'files.add({ type: \"image\" })',\n            icon: 'fa fa-file-image-o'\n\n        },\n        {\n            text: 'ADD_DOCUMENTS',\n            href: 'files.add({ type: \"document\" })',\n            icon: 'fa fa-file-pdf-o'\n        }\n    ];\n\n    $scope.tableParams = new NgTableParams({\n        count: 25, // count per page\n        sorting: {\n            'created_at': 'desc' // initial sorting\n        }\n    }, {\n        total: 0, // length of data\n        getData: function($defer, params) {\n            $scope.requestPending = true;\n            // prepare options to be sent to api\n            var queryOptions = {};\n\n            // params.count() - number of items per page declared in view\n            if (typeof Utils.$stateParams.perPage !== 'undefined') {\n                params.count(Utils.$stateParams.perPage);\n                queryOptions.perPage = params.count();\n            }\n\n            // params.page() - current page\n            if (typeof Utils.$stateParams.page !== 'undefined') {\n                params.page(Utils.$stateParams.page);\n                queryOptions.page = params.page();\n            }\n\n            // tableParams.orderBy() - an array of string indicating both the sorting column and direction (e.g. [\"+name\", \"-email\"])\n            if (params.sorting()) {\n                // only interested in first sort column for now\n                var orderBy = params.orderBy()[0];\n                queryOptions.sort = orderBy[0] === '+' ? orderBy.substring(1) : orderBy;\n            }\n\n            // Utils.$stateParams - filters from state params\n            var filters = Utils.$stateParams;\n            queryOptions = _.merge(queryOptions, filters);\n            $scope.activeFilter = filters;\n\n            // get list by default\n            var promise = FilesRepository.list(queryOptions);\n\n            // Promise is a REST AngularJS service that talks to api and return promise\n            promise.then(function(response) {\n                $scope.requestPending = false;\n                params.total(response.meta.total);\n                $defer.resolve(FilesRepository.clean(response));\n                $scope.meta = response.meta;\n            });\n        }\n    });\n}\n\nFilesListCtrl.$inject = ['$scope', 'Utils', 'FilesRepository', 'ngTableParams'];\nmodule.exports = FilesListCtrl;\n","'use strict';\n\nfunction FilesDeleteCtrl($scope, Utils, FilesRepository, $modal) {\n    var vm = this;\n    var viewPath = 'gzero/admin/views/files/directives/';\n    // Delete modal\n    vm.deleteModal = {\n        /**\n         * Function initiates the AngularStrap modal\n         *\n         * @param title translatable title of modal\n         * @param message translatable messages of modal\n         */\n        initModal: function(title, message) {\n            var self = this;\n            self.modal = $modal({\n                scope: $scope,\n                title: title,\n                content: message,\n                templateUrl: viewPath + 'fileDeleteModal.tpl.html',\n                show: true,\n                placement: 'center'\n            });\n\n            // Bind hotkeys\n            Utils.hotkeys.add({\n                combo: 'enter',\n                description: Utils.$filter('translate')('CONFIRM_DELETE'),\n                callback: function() {\n                    self.deleteFile();\n                }\n            });\n        },\n\n        /**\n         * Function shows the AngularStrap modal\n         *\n         * @param FileId File id to be removed, it is saved in the scope\n         */\n        showModal: function(FileId) {\n            var self = this;\n            vm.FileId = FileId;\n            self.initModal('PLEASE_CONFIRM', 'DELETE_FILE_QUESTION');\n            Utils.hotkeys.del('enter');\n        },\n\n        /**\n         * Function close the modal\n         *\n         */\n        closeModal: function() {\n            var self = this;\n            self.modal.hide();\n        },\n\n        /**\n         * Function performs the RestAngular DELETE action for File id in scope\n         *\n         */\n        deleteFile: function() {\n            var self = this;\n            FilesRepository.delete(vm.FileId).then(function(response) {\n                self.closeModal();\n                if (Utils.$state.$current.name === 'files.show.details') {\n                    Utils.$state.go('files.list', null, {reload: true, inherit: false});\n                } else {\n                    Utils.$state.go(Utils.$state.current, {}, {reload: true});\n                }\n                Utils.Notifications.addSuccess('FILE_HAS_BEEN_DELETED');\n            });\n        }\n    };\n}\n\nFilesDeleteCtrl.$inject = ['$scope', 'Utils', 'FilesRepository', '$modal'];\nmodule.exports = FilesDeleteCtrl;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class FilesDeleteTranslationCtrl\n *\n * @package    Admin\n */\n\n'use strict';\n\nfunction FilesDeleteTranslationCtrl($scope, Utils, $modal, FilesRepository) {\n    var vm = this;\n    var viewPath = 'gzero/admin/views/files/directives/';\n    // Delete modal\n    vm.deleteModal = {\n        /**\n         * Function initiates the AngularStrap modal\n         *\n         * @param title translatable title of modal\n         * @param message translatable messages of modal\n         */\n        initModal: function(title, message) {\n            var self = this;\n            self.modal = $modal({\n                scope: $scope,\n                title: title,\n                content: message,\n                templateUrl: viewPath + 'translationDeleteModal.tpl.html',\n                show: true,\n                placement: 'center'\n            });\n        },\n\n        /**\n         * Function shows the AngularStrap modal\n         *\n         * @param fileId files id\n         * @param translationId translation id\n         */\n        showModal: function(fileId, translationId) {\n            var self = this;\n            vm.fileId = fileId;\n            vm.translationId = translationId;\n            self.initModal('PLEASE_CONFIRM', 'DELETE_TRANSLATION_QUESTION');\n        },\n\n        /**\n         * Function close the modal\n         *\n         */\n        closeModal: function() {\n            var self = this;\n            self.modal.hide();\n        },\n\n        /**\n         * Function performs the RestAngular DELETE action for translation id in scope\n         *\n         */\n        delete: function() {\n            var self = this;\n            self.closeModal();\n            FilesRepository.deleteTranslation(vm.fileId, vm.translationId).then(function() {\n                Utils.Notifications.addSuccess('TRANSLATION_HAS_BEEN_DELETED');\n                Utils.$state.reload();\n            });\n        }\n    };\n}\nFilesDeleteTranslationCtrl.$inject = ['$scope', 'Utils', '$modal', 'FilesRepository'];\nmodule.exports = FilesDeleteTranslationCtrl;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class FilesTogglePropertyCtrl\n *\n * @package    Admin\n */\n\n'use strict';\n\nfunction FilesTogglePropertyCtrl(Utils, FilesRepository) {\n    var vm = this;\n\n    vm.toggleProperty = {\n\n        toggleProperty: function(fileId, propertyName, currentValue) {\n            var newValue = !currentValue;\n            var file = {};\n            file[propertyName] = newValue;\n            FilesRepository.update(fileId, file).then(\n                function() {\n                    Utils.$state.reload();\n                }\n            );\n        }\n\n    };\n\n}\nFilesTogglePropertyCtrl.$inject = ['Utils', 'FilesRepository'];\nmodule.exports = FilesTogglePropertyCtrl;\n","'use strict';\n\nfunction FileDeleteButton() {\n    return {\n        scope: true,\n        restrict: 'A',\n        controller: 'FilesDeleteCtrl',\n        controllerAs: 'vm',\n        bindToController: true,// because the scope is isolated\n        link: function(scope, element, attrs, FilesDeleteCtrl) {\n            element.on('click', function() {\n                // Show a delete modal from a controller\n                FilesDeleteCtrl.deleteModal.showModal(attrs.id);\n            });\n        }\n    };\n}\n\nFileDeleteButton.$inject = [];\nmodule.exports = FileDeleteButton;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class FileTogglePropertyButton\n *\n * @package    Admin\n */\n\n'use strict';\n\nfunction FileTogglePropertyButton() {\n    return {\n        scope: true,\n        restrict: 'A',\n        controller: 'FilesTogglePropertyCtrl',\n        controllerAs: 'vm',\n        bindToController: true,\n        link: function(scope, element, attrs, FilesTogglePropertyCtrl) {\n            element.on('click', function() {\n                FilesTogglePropertyCtrl.toggleProperty.toggleProperty(\n                    attrs.fileId,\n                    attrs.propertyName,\n                    String(attrs.value) !== 'false'\n                );\n            });\n        }\n    };\n}\n\nFileTogglePropertyButton.$inject = [];\nmodule.exports = FileTogglePropertyButton;\n","'use strict';\n\nfunction FileTranslationDeleteButton() {\n    return {\n        scope: true,\n        restrict: 'A',\n        controller: 'FilesDeleteTranslationCtrl',\n        controllerAs: 'vm',\n        bindToController: true,\n        link: function(scope, element, attrs, TranslationDeleteCtrl) {\n            element.on('click', function() {\n                TranslationDeleteCtrl.deleteModal.showModal(attrs.fileId, attrs.translationId);\n            });\n        }\n    };\n}\n\nFileTranslationDeleteButton.$inject = [];\nmodule.exports = FileTranslationDeleteButton;\n","'use strict';\n\nangular.module('admin.files', ['ngTable'])\n    .config([\n        '$stateProvider',\n        '$urlRouterProvider',\n        'RestangularProvider',\n        function($stateProvider, $urlRouterProvider, RestangularProvider) {\n\n            var viewPath = 'gzero/admin/views/files/';\n\n            // Now set up the states\n            $stateProvider\n                .state('files', {\n                    url: '/file',\n                    templateUrl: viewPath + 'index.html'\n                })\n                .state('files.list', {\n                    url: '/list?type&is_active&page&perPage',\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'list.html',\n                            controller: 'FilesListCtrl'\n                        }\n                    }\n                })\n                // FILE SHOW\n                .state('files.show', {\n                    url: '/{fileId}/show/{langCode}',\n                    abstract: [\n                        // redirect to active tab on language change\n                        '$state', function($state) {\n                            return _.startsWith($state.current.name, 'files.show') ? $state.current.name : '.details';\n                        }\n                    ],\n                    resolve: {\n                        langCode: [\n                            '$state', '$stateParams', function($state, $stateParams) {\n                                return $stateParams.langCode;\n                            }\n                        ],\n                        file: [\n                            '$stateParams', 'FilesRepository', function($stateParams, FilesRepository) {\n                                return FilesRepository.one($stateParams.fileId);\n                            }\n                        ]\n                    },\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'show.html',\n                            controller: 'FilesDetailsCtrl'\n                        },\n                        'langSwitcher@files.show': {\n                            templateUrl: viewPath + 'details/langSwitcher.html'\n\n                        },\n                        'fileSettings@files.show': {\n                            templateUrl: viewPath + 'details/settings.html'\n\n                        }\n                    }\n                })\n                .state('files.show.details', {\n                    url: '/details',\n                    deepStateRedirect: true,\n                    sticky: true,\n                    views: {\n                        'fileTab': {\n                            templateUrl: viewPath + 'details/tabs/details.html'\n                        }\n                    }\n                })\n                // FILE EDIT\n                .state('files.edit', {\n                    url: '/{fileId}/edit/{langCode}',\n                    abstract: '.index',\n                    resolve: {\n                        langCode: [\n                            '$state', '$stateParams', function($state, $stateParams) {\n                                return $stateParams.langCode;\n                            }\n                        ],\n                        file: [\n                            '$stateParams', 'FilesRepository', function($stateParams, FilesRepository) {\n                                return FilesRepository.one($stateParams.fileId);\n                            }\n                        ]\n                    },\n                    data: {\n                        showMask: true // enter edit mode\n                    },\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'show.html',\n                            controller: 'FilesDetailsCtrl'\n                        },\n                        'langSwitcher@files.edit': {\n                            templateUrl: viewPath + 'details/langSwitcher.html'\n\n                        },\n                        'fileSettings@files.edit': {\n                            templateUrl: viewPath + 'details/settings.html'\n\n                        }\n                    }\n                })\n                .state('files.edit.index', {\n                    url: '',\n                    views: {\n                        'fileTab': {\n                            templateUrl: viewPath + 'details/tabs/details.html'\n                        }\n                    }\n                })\n                .state('files.edit.details', {\n                    url: '/details',\n                    views: {\n                        'fileTab': {\n                            controller: 'FilesDetailsEditCtrl',\n                            templateUrl: viewPath + 'details/tabs/detailsEdit.html'\n                        }\n                    }\n                })\n                // FILE ADD\n                .state('files.add', {\n                    url: '/add/{type}',\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'add.html',\n                            controller: 'FilesAddCtrl'\n                        }\n                    },\n                    resolve: {\n                        type: [\n                            '$state', '$stateParams', function($state, $stateParams) {\n                                return $stateParams.type;\n                            }\n                        ]\n                    }\n                })\n                // FILE ADD TRANSLATION\n                .state('files.addTranslation', {\n                    url: '/{fileId}/add-translation/{langCode}',\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'addTranslation.html',\n                            controller: 'FilesAddTranslationCtrl'\n                        }\n                    }\n                });\n        }\n    ])\n    .controller('FilesAddCtrl', require('./controllers/FilesAddCtrl'))\n    .controller('FilesListCtrl', require('./controllers/FilesListCtrl'))\n    .controller('FilesDetailsCtrl', require('./controllers/FilesDetailsCtrl'))\n    .controller('FilesDetailsEditCtrl', require('./controllers/FilesDetailsEditCtrl'))\n    .controller('FilesAddTranslationCtrl', require('./controllers/FilesAddTranslationCtrl'))\n    .controller('FilesDeleteCtrl', require('./controllers/directives/FilesDeleteCtrl'))\n    .controller('FilesTogglePropertyCtrl', require('./controllers/directives/FilesTogglePropertyCtrl'))\n    .controller('FilesDeleteTranslationCtrl', require('./controllers/directives/FilesDeleteTranslationCtrl'))\n    .service('FileService', require('./services/FileService.js'))\n    .factory('FilesRepository', require('./services/FilesRepository.js'))\n    .directive('fileDeleteButton', require('./directives/FileDeleteButton.js'))\n    .directive('fileTogglePropertyButton', require('./directives/FileTogglePropertyButton.js'))\n    .directive('fileTranslationDeleteButton', require('./directives/FileTranslationDeleteButton.js'))\n    .run([\n        'NavBar',\n        function(NavBar) {\n            NavBar.add({\n                title: 'FILES', action: 'files.list', icon: 'fa fa-files-o'\n            });\n        }\n    ]);\n","'use strict';\n\nfunction FileService(Utils) {\n    return {\n        /**\n         * Returns merged file data with provided defaults\n         *\n         * @param file file data\n         * @param defaults default file settings to merge with\n         * @returns Object merged file data with defaults\n         */\n        prepareRequestData: function(file, defaults) {\n            var output = {\n                file: file\n            };\n            // set translations title and description\n            if (typeof file.title !== 'undefined') {\n                output.title = file.title;\n            }\n            if (typeof file.description !== 'undefined') {\n                output.description = file.description;\n            }\n            return _.merge(defaults, output);\n        },\n        /**\n         * Returns file extensions pattern for ng-file-upload validator e.g. '.png,.jpg,.jpeg,.tif'\n         *\n         * @param type file type\n         * @returns string type file extensions pattern for ng-file-upload validator\n         */\n        getTypeExtensionsPattern: function(type) {\n            return '.' + _.join(Utils.Config.fileExtensions[type], ',.');\n        }\n    };\n}\n\nFileService.$inject = ['Utils'];\nmodule.exports = FileService;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class FileController\n *\n * @package    Admin\n */\n\n'use strict';\n\nfunction FilesRepository(Restangular, Upload, Utils) {\n    var api = 'files';\n    var files = Restangular.all(api);\n    return {\n        one: function(id, params) {\n            return Restangular.one(api, id).get(params);\n        },\n        list: function(params) {\n            return files.getList(params);\n        },\n        listForEntity: function(entity, params) {\n            return Restangular.one(this.getEntityEndpoint(entity), entity.id)\n            .all('files')\n            .getList(params);\n        },\n        syncWithEntity: function(entity, files) {\n            return Restangular.one(this.getEntityEndpoint(entity), entity.id)\n            .customPUT({data: files}, 'files');\n        },\n        delete: function(id) {\n            return Restangular.one(api, id)\n            .remove();\n        },\n        update: function(id, file) {\n            return Restangular.one(api, id).patch(file);\n        },\n        create: function(newFile) {\n            return Upload.upload({\n                url: _.clone(Restangular.configuration.baseUrl) + '/' + api,\n                headers: _.clone(Restangular.configuration.defaultHeaders),\n                withCredentials: _.clone(Restangular.configuration.defaultHttpFields.withCredentials),\n                data: newFile\n            });\n        },\n        newTranslation: function(id, newTranslation) {\n            return Restangular.one(api, id)\n            .all('translations')\n            .post(newTranslation);\n        },\n        deleteTranslation: function(fileId, translationId) {\n            return Restangular.one(api, fileId)\n            .one('translations', translationId)\n            .remove();\n        },\n        clean: function(elem) {\n            return Restangular.stripRestangular(elem);\n        },\n        getEntityEndpoint: function(entity) {\n            if (_.indexOf(Utils.Config.contentTypes, entity.type) !== -1) {\n                return 'contents';\n            }\n\n            if (_.indexOf(Utils.Config.blockTypes, entity.type) !== -1) {\n                return 'blocks';\n            }\n\n            return api;\n        }\n    };\n}\n\nFilesRepository.$inject = ['Restangular', 'Upload', 'Utils'];\nmodule.exports = FilesRepository;\n","'use strict';\n\nfunction Notifications($translate) {\n    // Notifications stack\n    var stackBottomRight = {'dir1': 'up', 'dir2': 'left', 'firstpos1': 25, 'firstpos2': 25};\n    // Notifications options\n    var options = {\n        addclass: 'stack-bottomright',\n        stack: stackBottomRight,\n        shadow: false,\n        buttons: {\n            sticker: false\n        }\n    };\n    /**\n     * Function which shows messages of given type\n     *\n     * @param callback function used to show each message\n     * @param messages messages to show\n     */\n    var addMessages = function(callback, messages) {\n        _.forEach(messages, function(messages) {\n            callback(messages[0]);\n        });\n    };\n    return {\n        /**\n         * Function shows multiple AngularStrap info type alerts\n         *\n         * @param messages translatable messages to show\n         */\n        addInfos: function(messages) {\n            var self = this;\n            addMessages(self.addInfo, messages);\n        },\n        /**\n         * Function shows multiple AngularStrap danger type alerts\n         *\n         * @param messages translatable messages to show\n         */\n        addErrors: function(messages) {\n            var self = this;\n            addMessages(self.addError, messages);\n        },\n        /**\n         * Function shows multiple AngularStrap warning type alerts\n         *\n         * @param messages translatable messages to show\n         */\n        addWarnings: function(messages) {\n            var self = this;\n            addMessages(self.addWarning, messages);\n        },\n        /**\n         * Function shows multiple AngularStrap success type alerts\n         *\n         * @param messages translatable messages to show\n         */\n        addSuccesses: function(messages) {\n            var self = this;\n            addMessages(self.addSuccess, messages);\n        },\n        /**\n         * Function shows the AngularStrap info type alert\n         *\n         * @param message translatable message string eg. 'COMMON_ERROR'\n         * @param translationParams dynamic params for the translation\n         */\n        addInfo: function(message, translationParams) {\n            return new PNotify(_.merge(options, {\n                text: $translate.instant(message, translationParams),\n                type: 'info'\n            }));\n        },\n        /**\n         * Function shows the AngularStrap danger type alert\n         *\n         * @param message translatable message string eg. 'COMMON_ERROR'\n         * @param translationParams dynamic params for the translation\n         */\n        addError: function(message, translationParams) {\n            return new PNotify(_.merge(options, {\n                text: $translate.instant(message, translationParams),\n                type: 'error',\n                icon: 'fa fa-times'\n            }));\n        },\n        /**\n         * Function shows the AngularStrap warning type alert\n         *\n         * @param message translatable message string eg. 'COMMON_ERROR'\n         * @param translationParams dynamic params for the translation\n         */\n        addWarning: function(message, translationParams) {\n            return new PNotify(_.merge(options, {\n                text: $translate.instant(message, translationParams),\n                type: 'warning'\n            }));\n        },\n        /**\n         * Function shows the AngularStrap success type alert\n         *\n         * @param message translatable message string eg. 'COMMON_ERROR'\n         * @param translationParams dynamic params for the translation\n         */\n        addSuccess: function(message, translationParams) {\n            return new PNotify(_.merge(options, {\n                text: $translate.instant(message, translationParams),\n                type: 'success'\n            }));\n        }\n    };\n}\n\nmodule.$inject = ['$translate'];\nmodule.exports = Notifications;\n","'use strict';\n\nfunction Storage() {\n    var storageItems = {};\n    return {\n        /**\n         * Function adds specified object to the storageItems\n         *\n         * @param object\n         */\n        setStorageItem: function(object) {\n            storageItems = _.merge(storageItems, object, function(objectValue, sourceValue) {\n                if (_.isArray(objectValue)) {\n                    return sourceValue;\n                }\n            });\n        },\n        /**\n         * Function returns the specified object from the storageItems\n         *\n         * @param index\n         * @returns {object}\n         */\n        getStorageItem: function(index) {\n            return storageItems[index];\n        },\n        /**\n         * Function removes specified object from the storageItems\n         *\n         * @param index\n         * @returns {object}\n         */\n        removeStorageItem: function(index) {\n            storageItems = _.omit(storageItems, index);\n        }\n    };\n}\n\nStorage.$inject = [];\nmodule.exports = Storage;\n","'use strict';\n\nfunction ckOptions() {\n    var defaults = {\n        toolbarGroups: [\n            {name: 'clipboard', groups: ['clipboard', 'undo']},\n            {name: 'editing', groups: ['find', 'selection']},\n            {name: 'links'},\n            {name: 'insert'},\n            {name: 'tools'},\n            {name: 'document', groups: ['mode', 'document', 'doctools']},\n            {name: 'others'},\n            '/',\n            {name: 'basicstyles', groups: ['basicstyles', 'cleanup']},\n            {name: 'paragraph', groups: ['list', 'indent', 'blocks', 'bidi']},\n            {name: 'align'},\n            {name: 'styles'}\n        ],\n        height: '500px'\n    };\n\n    return {\n        /**\n         * Function adds specified object to the CKEditor options\n         *\n         * @param object\n         */\n        setEditorOption: function(object) {\n            defaults = _.merge(defaults, object, function(objectValue, sourceValue) {\n                if (_.isArray(objectValue)) {\n                    return sourceValue;\n                }\n            });\n        },\n        /**\n         * Function returns CKEditor options\n         * @param custom custom option to include in return object, only for this instance of editor\n         * @returns {object}\n         */\n        getEditorOptions: function(custom) {\n            var output = _.cloneDeep(defaults);\n            angular.forEach(custom, function(value, key) {\n                output[key] = value;\n            });\n            return output;\n        }\n    };\n}\n\nmodule.$inject = [];\nmodule.exports = ckOptions;\n","function Navigation() {\n    'use strict';\n\n    var items = [];\n\n    /**\n     * Function checks if 'item' structure is valid\n     *\n     * @param item object\n     * @returns {boolean}\n     */\n    var checkStructure = function(item) {\n        if (_.has(item, 'divider')) {\n            if (item.divider !== true) {\n                throw new Error('Property: ' + '\\'divider\\'' + ' must be set to \\'true\\'');\n            }\n        } else if (!_.has(item, 'title')) {\n            throw new Error('Property: ' + 'title' + ' is missing');\n        } else if (!_.has(item, 'action') && !_.has(item, 'href')) {\n            throw new Error('Property: ' + '\\'action\\' or \\'href\\'' + ' are required');\n        }\n        return true;\n    };\n    /**\n     * Function returns children of element specified by 'title'\n     *\n     * @param title string\n     * @returns {Array}\n     */\n    var getChildren = function(title) {\n        var children = [],\n            foundFlag = false;\n        _.forEach(items, function(value, index) {\n            if (value.title === title) {\n                foundFlag = true;\n                if (_.has(value, 'children') && Array.isArray(value.children)) {\n                    children = value.children;\n                }\n                return false;\n            }\n        });\n        if (foundFlag === false) {\n            throw new Error('Parent: \\'' + title + '\\' have no children, because does not exist');\n        }\n        return children;\n    };\n    /**\n     * Function adds element according to 'position' argument\n     * position = 'before' - element will be added before element specified by 'title'\n     * position = 'after' - element will be added after element specified by 'title'\n     *\n     * @param title string\n     * @param item object\n     * @param position string\n     */\n    var addBeforeAfter = function(title, item, position) {\n        if (typeof position === 'undefined') {\n            throw new Error('Argument \\'position\\' is required, values: \\'before\\' or \\'after\\'');\n        } else if (typeof position !== 'string') {\n            throw new Error('Argument \\'position\\' must be of string type, values: \\'before\\' or \\'after\\'');\n        }\n        if (checkStructure(item)) {\n            var foundFlag = false;\n            _.forEach(items, function(value, index) {\n                if (value.title === title) {\n                    foundFlag = true;\n                    if (position === 'before') {\n                        items.splice(index, 0, item);\n                    } else if (position === 'after') {\n                        items.splice(index + 1, 0, item);\n                    }\n                    return false;\n                }\n            });\n            if (foundFlag === false) {\n                throw new Error('Element: \\'' + title + '\\' does not exist');\n            }\n        }\n    };\n    /**\n     * Function adds child link according to 'position' argument\n     * position = true - child will be added as first element\n     * position = false - child will be added as last element\n     *\n     * @param parent string\n     * @param item object\n     * @param position boolean\n     */\n    var addChild = function(parent, item, position) {\n        if (typeof position === 'undefined') {\n            position = false;\n        } else if (typeof position !== 'boolean') {\n            throw new Error('Argument \\'position\\' must be of boolean type');\n        }\n        if (checkStructure(item)) {\n            var foundFlag = false;\n            _.forEach(items, function(value, index) {\n                if (value.title === parent) {\n                    if (!_.has(value, 'children') || !Array.isArray(value.children)) {\n                        value.children = [];\n                    }\n                    if (position === true) {\n                        value.children.unshift(item);\n                    } else if (position === false) {\n                        value.children.push(item);\n                    }\n                    foundFlag = true;\n                    return false;\n                }\n            });\n            if (foundFlag === false) {\n                throw new Error('Parent: \\'' + parent + '\\' does not exist');\n            }\n        }\n    };\n    /**\n     * Function adds child link according to 'position' argument\n     * position = 'before' - child will be added before element specified by 'title'\n     * position = 'after' - child will be added after element specified by 'title'\n     *\n     * @param parent string\n     * @param title string\n     * @param item object\n     * @param position string\n     */\n    var addBeforeAfterChild = function(parent, title, item, position) {\n        if (typeof position === 'undefined') {\n            throw new Error('Argument \\'position\\' is required, values: \\'before\\' or \\'after\\'');\n        } else if (typeof position !== 'string') {\n            throw new Error('Argument \\'position\\' must be of string type, values: \\'before\\' or \\'after\\'');\n        }\n        if (checkStructure(item)) {\n            var foundFlag = false,\n                children = getChildren(parent);\n\n            if (children.length === 0) {\n                throw new Error('Parent: \\'' + parent + '\\' have no children');\n            }\n            _.forEach(children, function(value, index) {\n                if (value.title === title) {\n                    foundFlag = true;\n                    if (position === 'before') {\n                        children.splice(index, 0, item);\n                    } else if (position === 'after') {\n                        children.splice(index + 1, 0, item);\n                    }\n                    return false;\n                }\n            });\n            if (foundFlag === false) {\n                throw new Error('Child: \\'' + title + '\\' does not exist');\n            }\n        }\n    };\n\n    return {\n        /**\n         * Function adds element to the end of menu\n         *\n         * @param item object\n         */\n        add: function(item) {\n            if (checkStructure(item)) {\n                items.push(item);\n            }\n        },\n        /**\n         * Function adds element to the menu as first\n         *\n         * @param item object\n         */\n        addFirst: function(item) {\n            if (checkStructure(item)) {\n                items.unshift(item);\n            }\n        },\n        /**\n         * Function adds element 'item' to the menu before element specified by 'title'\n         *\n         * @param title string\n         * @param item object\n         */\n        addBefore: function(title, item) {\n            addBeforeAfter(title, item, 'before');\n        },\n        /**\n         * Function adds element 'item' to the menu after element specified by 'title'\n         *\n         * @param title string\n         * @param newItem object\n         */\n        addAfter: function(title, newItem) {\n            addBeforeAfter(title, newItem, 'after');\n        },\n        /**\n         * Function adds child link as first to the element specified by 'parent' argument\n         *\n         * @param parent string\n         * @param item object\n         */\n        addFirstChild: function(parent, item) {\n            addChild(parent, item, true);\n        },\n        /**\n         * Function adds child link as last to the element specified by 'parent' argument\n         *\n         * @param parent string\n         * @param item object\n         */\n        addLastChild: function(parent, item) {\n            addChild(parent, item, false);\n        },\n        /**\n         * Function adds link to the element specified by 'parent' before child element specified by 'title'\n         *\n         * @param parent string\n         * @param title string\n         * @param item object\n         */\n        addBeforeChild: function(parent, title, item) {\n            addBeforeAfterChild(parent, title, item, 'before');\n        },\n        /**\n         * Function adds link to the element specified by 'parent' after child element specified by 'title'\n         *\n         * @param parent string\n         * @param title string\n         * @param item object\n         */\n        addAfterChild: function(parent, title, item) {\n            addBeforeAfterChild(parent, title, item, 'after');\n        },\n        /**\n         * Function return items from menu\n         *\n         * @returns {Array}\n         */\n        getItems: function() {\n            return items;\n        },\n        /**\n         * Function exports links to 'dropdown' menu\n         *\n         * @returns {Array}\n         */\n        exportToDropdownMenu: function() {\n            var results = [];\n            var newItem = {};\n            _.forEach(items, function(value) {\n                _.forIn(value, function(value, key) {\n                    if (key === 'title') {\n                        newItem.text = value;\n                    } else {\n                        newItem[key] = value;\n                    }\n                });\n                results.push(newItem);\n                newItem = {};\n            });\n            return results;\n        }\n    };\n}\nmodule.exports = Navigation;\n","'use strict';\n\nfunction SettingsCtrl($scope, Utils, SettingsRepository, categories, settings) {\n\n    // fields that will use number type input\n    $scope.numericFields = ['defaultPageSize', 'seoDescLength'];\n\n    // option category\n    if (typeof Utils.$stateParams.key !== 'undefined') {\n        $scope.categoryKey = Utils.$stateParams.key;\n    }\n\n    // lang code exists\n    if (typeof Utils.$stateParams.langCode !== 'undefined') {\n        $scope.langCode = Utils.$stateParams.langCode;\n    }\n\n    // categories exists\n    if (typeof categories !== 'undefined') {\n        $scope.categories = SettingsRepository.clean(categories); // options categories\n    }\n\n    // settings exists\n    if (typeof settings !== 'undefined') {\n        $scope.settings = SettingsRepository.clean(settings).data; // category settings\n    }\n\n    // we need integer values for number type inputs\n    angular.forEach($scope.numericFields, function(propertyName){\n        if ($scope.settings.hasOwnProperty(propertyName)) {\n            angular.forEach($scope.settings[propertyName], function(v, k) {\n                $scope.settings[propertyName][k] = parseInt(v);\n            });\n        }\n    });\n\n    // save settings category options\n    $scope.save = function(key, value) {\n        // prepare option data\n        var data = {\n            key: key,\n            value: value\n        };\n\n        // save option\n        SettingsRepository.update($scope.categoryKey, data).then(function() {\n            Utils.Notifications.addSuccess('THE_CHANGES_HAVE_BEEN_SAVED');\n        });\n    };\n}\n\nSettingsCtrl.$inject = ['$scope', 'Utils', 'SettingsRepository', 'categories', 'settings'];\nmodule.exports = SettingsCtrl;\n","'use strict';\n\nfunction SettingCopyCtrl($scope, Utils, $modal, SettingsRepository) {\n    var vm = this;\n    var viewPath = 'gzero/admin/views/settings/directives/';\n    // Copy modal\n    vm.copyModal = {\n        /**\n         * Function initiates the AngularStrap modal\n         *\n         * @param title translatable title of modal\n         * @param message translatable messages of modal\n         */\n        initModal: function(title, message) {\n            var self = this;\n            self.modal = $modal({\n                scope: $scope,\n                title: title,\n                content: message,\n                templateUrl: viewPath + 'settingCopyModal.tpl.html',\n                show: true,\n                placement: 'center'\n            });\n        },\n\n        /**\n         * Function shows the AngularStrap modal\n         *\n         * @param attrs attributes from directive\n         */\n        showModal: function(attrs) {\n            var self = this;\n            vm.attrs = attrs;\n            self.initModal('PLEASE_CONFIRM', 'OPTIONS_LANG.COPY_OPTION_QUESTION');\n        },\n\n        /**\n         * Function close the modal\n         *\n         */\n        closeModal: function() {\n            var self = this;\n            self.modal.hide();\n        },\n\n        /**\n         * Function apply setting value to other languages and performs the RestAngular PUT action for option value\n         *\n         */\n        saveSetting: function() {\n            var self = this;\n            self.closeModal();\n            // prepare option data\n            var data = {\n                key: vm.attrs.optionKey,\n                value: angular.fromJson(vm.attrs.optionValue)\n            };\n\n            // set option value to all other languages\n            _.forEach(data.value, function(n, key) {\n                data.value[key] = vm.attrs.optionNewValue;\n            });\n\n            // save option\n            SettingsRepository.update(vm.attrs.categoryKey, data).then(function() {\n                Utils.Notifications.addSuccess('OPTIONS_LANG.COPY_CONFIRM');\n                Utils.$state.reload();\n            });\n        }\n    };\n}\nSettingCopyCtrl.$inject = ['$scope', 'Utils', '$modal', 'SettingsRepository'];\nmodule.exports = SettingCopyCtrl;\n","'use strict';\n\nfunction SettingCopyButton() {\n    return {\n        scope: '=',\n        restrict: 'A',\n        controller: 'SettingCopyCtrl',\n        controllerAs: 'vm',\n        bindToController: true,\n        link: function(scope, element, attrs, SettingCopyCtrl) {\n            element.on('click', function() {\n                SettingCopyCtrl.copyModal.showModal(attrs);\n            });\n        }\n    };\n}\n\nSettingCopyButton.$inject = [];\nmodule.exports = SettingCopyButton;\n","'use strict';\n\nangular.module('admin.settings', [])\n    .config([\n        '$stateProvider',\n        '$urlRouterProvider',\n        'RestangularProvider',\n        function($stateProvider, $urlRouterProvider, RestangularProvider) {\n\n            var viewPath = 'gzero/admin/views/settings/';\n\n            // Now set up the states\n            $stateProvider\n                .state('settings', {\n                    url: '/settings/{key}',\n                    templateUrl: viewPath + 'index.html',\n                    controller: 'SettingsCtrl',\n                    deepStateRedirect: true,\n                    resolve: {\n                        categories: [\n                            'SettingsRepository', function(SettingsRepository) {\n                                // get tree of all categories\n                                return SettingsRepository.list();\n                            }\n                        ],\n                        settings: [\n                            '$stateParams', 'SettingsRepository', function($stateParams, SettingsRepository) {\n                                return SettingsRepository.one($stateParams.key);\n                            }\n                        ]\n                    }\n                })\n                // SETTINGS SHOW\n                .state('settings.show', {\n                    url: '/{langCode}',\n                    views: {\n                        'contentTab': {\n                            templateUrl: viewPath + 'show.html',\n                            controller: 'SettingsCtrl'\n                        }\n                    }\n                });\n        }\n    ])\n    .controller('SettingsCtrl', require('./controllers/SettingsCtrl'))\n    .controller('SettingCopyCtrl', require('./controllers/directives/SettingCopyCtrl'))\n    .directive('settingCopyButton', require('./directives/SettingCopyButton.js'))\n    .factory('SettingsRepository', require('./services/SettingsRepository.js'))\n    .run([\n        'NavBar',\n        function(NavBar) {\n            NavBar.add({\n                title: 'SETTINGS', action: 'settings', icon: 'fa fa-cogs'\n            });\n        }\n    ]);\n","'use strict';\n\nfunction SettingsRepository(Restangular) {\n    var api = 'options';\n    var option = Restangular.all(api);\n    return {\n        one: function(id, params) {\n            return Restangular.one(api, id).get(params);\n        },\n        list: function(params) {\n            return option.getList(params);\n        },\n        clean: function(elem) {\n            return Restangular.stripRestangular(elem);\n        },\n        delete: function(id) {\n            return Restangular.one(api, id).remove();\n        },\n        update: function(categoryKey, data) {\n            return Restangular.one(api, categoryKey).customPUT(data);\n        }\n    };\n}\n\nSettingsRepository.$inject = ['Restangular'];\nmodule.exports = SettingsRepository;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class UserController\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction UserDetailsCtrl($scope, Utils, UserRepository) {\n    // get single user\n    UserRepository.one(Utils.$stateParams.userId).then(function(response) {\n        $scope.user = UserRepository.clean(response);\n    });\n}\nUserDetailsCtrl.$inject = ['$scope', 'Utils', 'UserRepository'];\nmodule.exports = UserDetailsCtrl;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class UserController\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction UserDetailsCtrl($scope, UserRepository, Utils) {\n    // get single user\n    UserRepository.one(Utils.$stateParams.userId).then(function(response) {\n        $scope.user = UserRepository.clean(response);\n    });\n\n    $scope.saveUser = function() {\n        UserRepository.update($scope.user.id, $scope.user).then(function(response) {\n            Utils.$state.go('user.list');\n            Utils.Notifications.addSuccess('THE_CHANGES_HAVE_BEEN_SAVED');\n        });\n    };\n\n}\nUserDetailsCtrl.$inject = ['$scope', 'UserRepository', 'Utils'];\nmodule.exports = UserDetailsCtrl;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class UserController\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction UserListCtrl($scope, Utils, UserRepository, NgTableParams) {\n    $scope.tableParams = new NgTableParams({\n        count: 25, // count per page\n        sorting: {\n            'id': 'desc' // initial sorting\n        }\n    }, {\n        total: 0, // length of data\n        getData: function($defer, params) {\n            $scope.requestPending = true;\n            // prepare options to be sent to api\n            var queryOptions = {\n                type: 'user'\n            };\n\n            // params.count() - number of items per page declared in view\n            if (typeof Utils.$stateParams.perPage !== 'undefined') {\n                params.count(Utils.$stateParams.perPage);\n                queryOptions.perPage = params.count();\n            }\n\n            // params.page() - current page\n            if (typeof Utils.$stateParams.page !== 'undefined') {\n                params.page(Utils.$stateParams.page);\n                queryOptions.page = params.page();\n            }\n\n            // tableParams.orderBy() - an array of string indicating both the sorting column and direction (e.g. [\"+name\", \"-email\"])\n            if (params.sorting()) {\n                // only interested in first sort column for now\n                var orderBy = params.orderBy()[0];\n                queryOptions.sort = orderBy[0] === '+' ? orderBy.substring(1) : orderBy;\n            }\n\n            // get list by default\n            var promise = UserRepository.list(queryOptions);\n\n            // Promise is a REST AngularJS service that talks to api and return promise\n            promise.then(function(response) {\n                $scope.requestPending = false;\n                params.total(response.meta.total);\n                $defer.resolve(UserRepository.clean(response));\n                $scope.meta = response.meta;\n            });\n        }\n    });\n\n    $scope.userListActions = [\n        {\n            text: 'VIEW',\n            url: 'user.show({ userId: record_id })',\n            icon: 'fa fa-search'\n        },\n        {\n            text: 'EDIT',\n            href: 'user.edit({ userId: record_id })',\n            icon: 'fa fa-pencil'\n        },\n        {\n            text: 'DELETE',\n            click: 'delete', // this will be replaced with delete action\n            icon: 'fa fa-times'\n        }\n    ];\n}\n\nUserListCtrl.$inject = ['$scope', 'Utils', 'UserRepository', 'ngTableParams'];\nmodule.exports = UserListCtrl;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class UserController\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction UserListCtrl($scope, Utils, UserRepository, $modal) {\n    var vm = this;\n    var viewPath = 'gzero/admin/views/user/directives/';\n    \n    // Delete modal\n    vm.deleteModal = {\n        /**\n         * Function initiates the AngularStrap modal\n         *\n         * @param title translatable title of modal\n         * @param message translatable messages of modal\n         */\n        initModal: function(title, message) {\n            var self = this;\n            self.modal = $modal({\n                scope: $scope,\n                title: title,\n                content: message,\n                templateUrl: viewPath + 'userDeleteModal.tpl.html',\n                show: true,\n                placement: 'center'\n            });\n\n            // Bind hotkeys\n            Utils.hotkeys.add({\n                combo: 'enter',\n                description: 'CONFIRM_DELETE',\n                callback: function() {\n                    self.deleteUser();\n                }\n            });\n        },\n\n        /**\n         * Function shows the AngularStrap modal\n         * @param userId content id to be removed, it is saved in the scope\n         */\n        showModal: function(userId) {\n            var self = this;\n            vm.userId = userId;\n            if (userId !== Utils.Config.currentUserId) {\n                self.initModal('PLEASE_CONFIRM', 'DELETE_USER_QUESTION');\n                Utils.hotkeys.del('enter');\n            } else {\n                //You can not delete your own account!\n                Utils.Notifications.addError('DELETE_SELF_USER_ERROR');\n            }\n        },\n\n        /**\n         * Function close the modal\n         *\n         */\n        closeModal: function() {\n            var self = this;\n            self.modal.hide();\n        },\n\n        /**\n         * Function performs the RestAngular DELETE action for user id in scope\n         *\n         */\n        deleteUser: function(userId) {\n            var self = this;\n            UserRepository.delete(vm.userId).then(function(response) {\n                self.closeModal();\n                Utils.$state.go(Utils.$state.current, {}, {reload: true});\n            });\n        }\n    };\n}\n\nUserListCtrl.$inject = ['$scope', 'Utils', 'UserRepository', '$modal'];\nmodule.exports = UserListCtrl;\n","'use strict';\n\nfunction UserActionsDropdown($dropdown) {\n    return {\n        scope: {userActionsDropdown: '=', record: '='},\n        controller: 'UserDeleteCtrl',\n        controllerAs: 'vm',\n        restrict: 'A',\n        link: function(scope, element, attrs, UserDeleteCtrl) {\n            var dropdown = $dropdown(element, {\n                templateUrl: 'gzero/admin/views/user/directives/userActionsDropdown.tpl.html',\n                animation: 'am-flip-x',\n                placement: 'bottom-right'\n            });\n\n            element.on('click', function() {\n                // TODO better params replacement and functions handling\n                _.mapValues(scope.userActionsDropdown, function(n) {\n                    if (typeof n.url !== 'undefined') {\n                        // Record id\n                        if (n.url.indexOf('record_id') !== -1) {\n                            n.url = n.url.replace('record_id', scope.record.id);\n                        }\n                    } else if (typeof n.href !== 'undefined') {\n                        // Record id\n                        if (n.href.indexOf('record_id') !== -1) {\n                            n.href = n.href.replace('record_id', scope.record.id);\n                        }\n                    }\n                    return n;\n                });\n\n                dropdown.$scope.user = scope.userActionsDropdown;\n                dropdown.$scope.record = scope.record; // Pass user id to the view\n                dropdown.$scope.deleteModal = UserDeleteCtrl.deleteModal; // Pass delete action to the view\n            });\n        }\n    };\n}\n\nUserActionsDropdown.$inject = [];\nmodule.exports = UserActionsDropdown;\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class UserController\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction UserDeleteButton() {\n    return {\n        scope: {\n            userId: '='\n        },\n        restrict: 'A',\n        controller: 'UserDeleteCtrl',\n        controllerAs: 'vm',\n        link: function(scope, element, attrs, UserDeleteController) {\n            element.on('click', function() {\n                // Show a delete modal from a controller\n                UserDeleteController.deleteModal.showModal(scope.userId);\n            });\n        }\n    };\n}\n\nUserDeleteButton.$inject = [];\nmodule.exports = UserDeleteButton;\n","'use strict';\n\nangular.module('admin.user', ['ngTable'])\n    .config([\n        '$stateProvider',\n        '$urlRouterProvider',\n        'RestangularProvider',\n        function($stateProvider, $urlRouterProvider, RestangularProvider) {\n\n            var viewPath = 'gzero/admin/views/user/';\n\n            // Now set up the states\n            $stateProvider\n                .state('user', {\n                    url: '/user',\n                    templateUrl: viewPath + 'index.html'\n                })\n                .state('user.show', {\n                    url: '/{userId}/show',\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'show.html',\n                            controller: 'UserDetailsCtrl'\n                        }\n                    }\n                }).state('user.edit', {\n                    url: '/{userId}/edit',\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'edit.html',\n                            controller: 'UserEditCtrl'\n                        }\n                    }\n                })\n                .state('user.list', {\n                    url: '/list?page&perPage',\n                    views: {\n                        'content': {\n                            templateUrl: viewPath + 'list.html'\n                        }\n                    }\n\n                });\n        }\n    ])\n    .controller('UserListCtrl', require('./controllers/UserListCtrl'))\n    .controller('UserDeleteCtrl', require('./controllers/directives/UserDeleteCtrl'))\n    .controller('UserEditCtrl', require('./controllers/UserEditCtrl'))\n    .controller('UserDetailsCtrl', require('./controllers/UserDetailsCtrl'))\n    .factory('UserRepository', require('./services/UserRepository.js'))\n    .directive('userDeleteButton', require('./directives/UserDeleteButton.js'))\n    .directive('userActionsDropdown', ['$dropdown', require('./directives/UserActionsDropdown.js')])\n    .run([\n        'NavBar',\n        function(NavBar) {\n            NavBar.add({\n                title: 'USERS', action: 'user.list', icon: 'fa fa-user'\n                //children: [\n                //    {\n                //        title: 'USER_LIST',\n                //        action: 'user.list',\n                //        icon: 'fa fa-th'\n                //    }\n                //]\n            });\n        }\n    ]);\n","/**\n * This file is part of the GZERO CMS package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * Class UserController\n *\n * @package    Admin\n * @author     Mateusz Urbanowicz <urbanowiczmateusz89@gmail.com>\n * @copyright  Copyright (c) 2015, Mateusz Urbanowicz\n */\n\n'use strict';\n\nfunction UserRepository(Restangular) {\n    var api = 'users';\n    var users = Restangular.all(api);\n    return {\n        one: function(id, params) {\n            return Restangular.one(api, id).get(params);\n        },\n        tree: function(params) {\n            return Restangular.one(api).getList('tree', params);\n        },\n        list: function(params) {\n            return users.getList(params);\n        },\n        clean: function(elem) {\n            return Restangular.stripRestangular(elem);\n        },\n        delete: function(id) {\n            return Restangular.one(api, id).remove();\n        },\n        update: function(id, user) {\n            return Restangular.one(api, id).patch(user);\n        }\n    };\n}\n\nUserRepository.$inject = ['Restangular'];\nmodule.exports = UserRepository;\n"],"sourceRoot":"/source/"}